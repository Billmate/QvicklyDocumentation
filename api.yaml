openapi: 3.0.1
info:
  title: Billmate Online API v2.0
  description: Billmate Online API endpoints
  version: 2022-08-05
servers:
  - url: https://api.online.billmate.se/
    description: Production server
  - url: http://localhost:3005
    description: Localhost server
tags:
  - name: articles
    description: Operations about the articles of a merchant
  - name: conversations
    description: Conversations between merchants and Billmate
  - name: countries
    description: Returns the countries that are supported
  - name: creditflow
    description: Operations about the credit flow
  - name: currencies
    description: Returns the currencies are supported
  - name: customers
    description: Operations about the customers of a merchant
  - name: documents
    description: Operations about the document
  - name: feedback
    description: Operations about the feedback
  - name: invoices
    description: Operations about the invoices
  - name: languages
    description: Returns the languages that are supported
  - name: logos
    description: Operations about the merchant
  - name: merchant
    description: Operations about the merchant
  - name: register
    description: Operations about the register
  - name: reports
    description: Operations about the reports of a merchant
  - name: users
    description: Operations about the users of a merchant
  - name: whitelists
    description: Operations about the whitelists
paths:
  /articles:
    get:
      description: List all articles
      tags:
        - articles
      parameters:
        - $ref: "#/parameters/articlefilter"
        - $ref: "#/parameters/articlefrom"
        - $ref: "#/parameters/articleto"
        - $ref: "#/parameters/articlesearchnumber"
        - $ref: "#/parameters/articlesearchname"
        - $ref: "#/parameters/articlesearcharticle"
        - $ref: "#/parameters/articlesbycurrency"
        - $ref: "#/parameters/articlesbytaxrate"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Article"
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
    post:
      description: |
        Create a new article
      tags:
        - articles
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Article"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Article"
        "400":
          description: |
            Bad request
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
    delete:
      summary: Delete multiple articles
      description: Remove more than one article
      tags:
        - articles
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                example: 10000
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                  count:
                    type: integer
                example:
                  result: Removed
                  count: 2
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
  /articles/count:
    get:
      description: Count articles
      tags:
        - articles
      parameters:
        - $ref: "#/parameters/articlefilter"
        - $ref: "#/parameters/articlefrom"
        - $ref: "#/parameters/articleto"
        - $ref: "#/parameters/articlesearchnumber"
        - $ref: "#/parameters/articlesearchname"
        - $ref: "#/parameters/articlesearcharticle"
        - $ref: "#/parameters/articlesbycurrency"
        - $ref: "#/parameters/articlesbytaxrate"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: The number of articles that matches the filters used
                    example: 7
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
  "/articles/{id}":
    get:
      description: Get the article for the given id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The article id
      tags:
        - articles
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Article"
        "404":
          description: |
            Not found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
    patch:
      description: Update an article
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The article id
      tags:
        - articles
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Article"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Article"
        "400":
          description: |
            Bad request
        "404":
          description: |
            Not found

            The article could not be found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
    delete:
      description: Delete an article
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The article id
      tags:
        - articles
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  query_id:
                    type: integer
                example:
                  status: DELETED
                  query_id: 1000
        "404":
          description: |
            Not found

            The article could not be found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
  /conversations:
    get:
      description: List all conversations
      tags:
        - conversations
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Conversation"
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
    post:
      description: >
        Create a new conversation


        If the payload contains a message then a new message will be created and assigned to this conversation
      tags:
        - conversations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Conversation"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Conversation"
        "400":
          description: >
            Bad request


            If no payload is given then the server will answer with a Bad Request
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
  "/conversations/{id}":
    get:
      description: Get the conversation for the given id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The conversation id
      tags:
        - conversations
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Conversation"
        "404":
          description: |
            Not found

            The conversation was not found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
    patch:
      description: Update a conversation
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The conversation id
      tags:
        - conversations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Conversation"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Conversation"
        "400":
          description: >
            Bad request


            If no payload is given then the server will answer with a Bad Request
        "404":
          description: |
            Not found

            The conversation could not be found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
    delete:
      description: Delete a conversation and all of its messages.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The conversation id
      tags:
        - conversations
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  query_id:
                    type: integer
                example:
                  status: DELETED
                  query_id: 1000
        "404":
          description: |
            Not found

            The conversation could not be found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
  "/conversations/{id}/messages":
    get:
      description: Get all messages associated with a conversation
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The conversation id
      tags:
        - conversations
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Message"
        "404":
          description: |
            Not found

            The conversation could not be found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
    post:
      description: Create a new message in a conversation
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The conversation id
      tags:
        - conversations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Message"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
        "400":
          description: >
            Bad request


            If no payload is given then the server will answer with a Bad Request
        "404":
          description: |
            Not found

            The conversation could not be found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
  /countries:
    get:
      summary: Get the countries
      description: Returns a list of countries
      tags:
        - countries
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Country"
        "401":
          description: Token is missing
        "404":
          description: Not found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
  "/creditflow/search/{orgNum}":
    get:
      summary: Get the gln numbers of an organization by organization number
      description: Returns a list of gln numbers of an organization
      tags:
        - creditflow
      parameters:
        - name: orgNum
          in: path
          description: Social security number (SSN) or organisation number
          required: true
          schema:
            type: string
          example: 550101-1018
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  example: 10000
        "401":
          description: Token is missing
        "404":
          description: Not found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
  /currencies:
    get:
      summary: Get the currencies
      description: Returns a list of currencies
      tags:
        - currencies
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Currency"
        "401":
          description: Token is missing
        "404":
          description: Not found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
  /customers:
    get:
      summary: Get the customers of a merchant
      description: Returns a list of customers of a merchant
      tags:
        - customers
      parameters:
        - $ref: "#/parameters/customerlimit"
        - $ref: "#/parameters/customerstart"
        - $ref: "#/parameters/customerfilter"
        - $ref: "#/parameters/customerfrom"
        - $ref: "#/parameters/customerto"
        - $ref: "#/parameters/customersearch"
        - $ref: "#/parameters/customersearchinvoiceform"
        - $ref: "#/parameters/isPrivate"
        - $ref: "#/parameters/isCompany"
        - $ref: "#/parameters/isEFaktura"
        - $ref: "#/parameters/isReverseTax"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Customer"
        "401":
          description: Token is missing
        "404":
          description: Not found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
    post:
      summary: Place a customer for a Merchant
      description: Place a new customer in the customers of a Merchant
      tags:
        - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Customer"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
        "401":
          description: Token is missing
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
    delete:
      summary: Delete multiple customers
      description: Remove more than one customer
      tags:
        - customers
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                example: 10000
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                  count:
                    type: integer
                example:
                  result: Removed
                  count: 2
        "401":
          description: Token is missing
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
  /customers/count:
    get:
      summary: Get the number of matching customers according to the supplied filters
      description: Returns object with a count representing the number of customers
        that matches the current filter.
      tags:
        - customers
      parameters:
        - $ref: "#/parameters/customerfilter"
        - $ref: "#/parameters/customerfrom"
        - $ref: "#/parameters/customerto"
        - $ref: "#/parameters/customersearch"
        - $ref: "#/parameters/customersearchinvoiceform"
        - $ref: "#/parameters/isPrivate"
        - $ref: "#/parameters/isCompany"
        - $ref: "#/parameters/isEFaktura"
        - $ref: "#/parameters/isReverseTax"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: The number of customers that matches the filters used
                    example: 7
        "400":
          description: Bad request
        "401":
          description: Token is missing
      security:
        - bearerAuth: []
  "/customers/{mexcParamvaluesetsid}":
    get:
      summary: Find customer by mexcParamvaluesetsid
      description: Returns a single customer
      tags:
        - customers
      parameters:
        - name: mexcParamvaluesetsid
          in: path
          description: The requested id of the customer to return
          required: true
          schema:
            type: integer
            format: int64
          example: 1202237
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
        "401":
          description: Token is missing
        "404":
          description: Customer is not found
      security:
        - bearerAuth: []
    patch:
      summary: Update an existing customer
      description: Update an existing customer by mexcParamvaluesetsid
      tags:
        - customers
      parameters:
        - name: mexcParamvaluesetsid
          in: path
          description: The requested id of the customer to return
          required: true
          schema:
            type: integer
            format: int64
          example: 1202237
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Customer"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
        "401":
          description: Token is missing
        "404":
          description: Customer is not found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
    delete:
      summary: Delete a customer
      description: Removes a customer
      tags:
        - customers
      parameters:
        - name: mexcParamvaluesetsid
          in: path
          description: The requested id of the customer to return
          required: true
          schema:
            type: integer
            format: int64
          example: 10000
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                  mexcParamvaluesetsid:
                    type: integer
                example:
                  result: Removed
                  mexcParamvaluesetsid: 10000
        "401":
          description: Token is missing
        "404":
          description: Customer is not found
      security:
        - bearerAuth: []
  "/customers/searchByOrgNumber/{orgNum}":
    get:
      summary: Get the person/company details by orgNum
      description: Returns the details of the person/company
      tags:
        - customers
      parameters:
        - name: orgNum
          in: path
          description: Social security number (SSN) or organisation number
          required: true
          schema:
            type: string
          example: 550101-1018
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/addressResponse"
        "400":
          description: Bad request
      security:
        - bearerAuth: []
  /customers/export/xml:
    get:
      summary: Export the customers as XML
      description: Returns a XML file that includes the customers
      tags:
        - customers
      responses:
        "200":
          description: Successful operation
          content:
            application/xml:
              schema:
                type: string
        "404":
          description: Not Found
      security:
        - bearerAuth: []
    post:
      summary: Export multiple customers as XML
      description: Export the customers that are required
      tags:
        - customers
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                example: 10000
      responses:
        "200":
          description: Successful operation
          content:
            application/xml:
              schema:
                type: string
        "404":
          description: Not Found
      security:
        - bearerAuth: []
  /customers/export/csv:
    get:
      summary: Export the customers as CSV
      description: Returns a CSV file that includes the customers
      tags:
        - customers
      responses:
        "200":
          description: Successful operation
          content:
            text/csv:
              schema:
                type: string
        "404":
          description: Not Found
      security:
        - bearerAuth: []
    post:
      summary: Export multiple customers as CSV
      description: Export the customers that are required
      tags:
        - customers
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                example: 10000
      responses:
        "200":
          description: Successful operation
          content:
            text/csv:
              schema:
                type: string
        "404":
          description: Not Found
      security:
        - bearerAuth: []
  "/documents/collect/{orderRef}":
    get:
      summary: Check the bankid token
      description: Checks the bankid token
      tags:
        - documents
      parameters:
        - name: orderRef
          in: path
          description: The token for bank id
          required: true
          schema:
            type: string
          example: 6dcd4d3d-faa8-4137-a492-c7679c99e76e
      responses:
        "200":
          description: Bankid Response
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/CustomerKnowledgeBankidCollectResponse"
                  - $ref: "#/components/schemas/CustomerKnowledgeMailSend"
        "400":
          description: Bad Request
          content:
            plain/text:
              schema:
                type: string
                example: Type should be company or association
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
  "/documents/{name}/{id}/attachments":
    post:
      summary: Upload attachments
      description: Upload attachments
      tags:
        - documents
      parameters:
        - name: name
          in: path
          description: The form name
          required: true
          schema:
            type: string
            example: customerKnowledgeCompany
        - name: id
          in: path
          description: Unique id
          required: true
          schema:
            type: string
            format: uuid
            example: 0af3af2f-00ad-430d-9cd2-6c7332249b97
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                attachments:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Attachments are uploaded
        "400":
          description: Bad Request
          content:
            plain/text:
              schema:
                type: string
                example: Id is invalid
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
  "/documents/{name}/{id}/sign":
    post:
      summary: Sign the document by Bankid
      description: Signs the document by Bankid
      tags:
        - documents
      parameters:
        - name: name
          in: path
          description: The form name
          required: true
          schema:
            type: string
            example: customerKnowledgeCompany
        - name: id
          in: path
          description: Unique id
          required: true
          schema:
            type: string
            format: uuid
            example: 0af3af2f-00ad-430d-9cd2-6c7332249b97
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pno:
                  type: string
                  example: 550101-1018
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/CustomerKnowledgeBankidSignSuccessMessage"
                  - $ref: "#/components/schemas/CustomerKnowledgeBankidSignErrorMessage"
        "400":
          description: Bad Request
          content:
            plain/text:
              schema:
                type: string
                example: Type should be company or association
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
  "/documents/{name}":
    post:
      summary: Post form data
      description: Posts form data
      tags:
        - documents
      parameters:
        - name: name
          in: path
          description: The form name
          required: true
          schema:
            type: string
          example: customerKnowledgeCompany
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/CustomerKnowledgeCompany"
                - $ref: "#/components/schemas/CustomerKnowledgeAssociation"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
        "400":
          description: Bad Request
          content:
            plain/text:
              schema:
                type: string
                example: Type should be company or association
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
  /feedback:
    post:
      summary: Send a feedback of the customer with rate,feedback and useragent
      description: Sends a feedback of the customer with rate,feedback and useragent
      tags:
        - feedback
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rate:
                  type: string
                  example: Test-rate
                feedback:
                  type: string
                  example: Test-Feedback
                useragent:
                  type: string
                  example: Test-Useragent
      responses:
        "200":
          description: Successful operation
          content:
            plain/text:
              schema:
                type: string
                example: ok
        "400":
          description: Missing some required properties
          content:
            plain/text:
              schema:
                oneOf:
                  - type: string
                    example: Missing rate
                  - type: string
                    example: Missing feedback
                  - type: string
                    example: Missing useragent
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
  /invoices:
    get:
      summary: Get the invoices for a merchant
      description: Returns a list of invoices for a merchant
      tags:
        - invoices
      parameters:
        - $ref: "#/parameters/invoicelimit"
        - $ref: "#/parameters/invoicestart"
        - $ref: "#/parameters/invoicefilter"
        - $ref: "#/parameters/invoicefrom"
        - $ref: "#/parameters/invoiceto"
        - $ref: "#/parameters/invoicedeliverydatefrom"
        - $ref: "#/parameters/invoicedeliverydateto"
        - $ref: "#/parameters/invoiceduedatefrom"
        - $ref: "#/parameters/invoiceduedateto"
        - $ref: "#/parameters/invoiceinvoicedatefrom"
        - $ref: "#/parameters/invoiceinvoicedateto"
        - $ref: "#/parameters/invoicedatepaidfrom"
        - $ref: "#/parameters/invoicedatepaidto"
        - $ref: "#/parameters/invoicedatesentfrom"
        - $ref: "#/parameters/invoicedatesentto"
        - $ref: "#/parameters/invoiceiscard"
        - $ref: "#/parameters/invoiceisswish"
        - $ref: "#/parameters/invoiceiscash"
        - $ref: "#/parameters/invoiceispartpayment"
        - $ref: "#/parameters/invoiceis14days"
        - $ref: "#/parameters/invoiceis30days"
        - $ref: "#/parameters/invoiceisfactoring"
        - $ref: "#/parameters/invoiceishandling"
        - $ref: "#/parameters/invoiceisconverted"
        - $ref: "#/parameters/invoicesearch"
        - $ref: "#/parameters/invoicecountry"
        - $ref: "#/parameters/invoicecustomerno"
        - $ref: "#/parameters/invoiceinvoicetype"
        - $ref: "#/parameters/invoicehascredit"
        - $ref: "#/parameters/invoicexoverridetest"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/InvoiceRaw"
        "400":
          description: Bad request
        "401":
          description: Token is missing
        "404":
          description: Not found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
    post:
      summary: Create a new invoice
      description: Create a new invoice
      tags:
        - invoices
      parameters:
        - in: header
          name: X-overrideTest
          description: >
            If this header value is set to "true" the internal checking for
            test mode is skipped.


            Please note that this only have effect on test systems.
          schema:
            type: string
            example: "true"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Invoice"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/InvoiceResponse"
                  - type: object
                    properties:
                      status:
                        allOf:
                          - $ref: "#/components/schemas/InvoiceStatus"
                          - example: Created
        "400":
          description: Bad request
        "401":
          description: Token is missing
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
  /invoices/count:
    get:
      summary: Get the number of matching invoices according to the supplied filters
      description: Returns object with a count representing the number of invoices
        that matches the current filter.
      tags:
        - invoices
      parameters:
        - $ref: "#/parameters/invoicelimit"
        - $ref: "#/parameters/invoicestart"
        - $ref: "#/parameters/invoicefilter"
        - $ref: "#/parameters/invoicefrom"
        - $ref: "#/parameters/invoiceto"
        - $ref: "#/parameters/invoicedeliverydatefrom"
        - $ref: "#/parameters/invoicedeliverydateto"
        - $ref: "#/parameters/invoiceduedatefrom"
        - $ref: "#/parameters/invoiceduedateto"
        - $ref: "#/parameters/invoiceinvoicedatefrom"
        - $ref: "#/parameters/invoiceinvoicedateto"
        - $ref: "#/parameters/invoicedatepaidfrom"
        - $ref: "#/parameters/invoicedatepaidto"
        - $ref: "#/parameters/invoicedatesentfrom"
        - $ref: "#/parameters/invoicedatesentto"
        - $ref: "#/parameters/invoiceiscard"
        - $ref: "#/parameters/invoiceisswish"
        - $ref: "#/parameters/invoiceiscash"
        - $ref: "#/parameters/invoiceispartpayment"
        - $ref: "#/parameters/invoiceis14days"
        - $ref: "#/parameters/invoiceis30days"
        - $ref: "#/parameters/invoiceisfactoring"
        - $ref: "#/parameters/invoiceishandling"
        - $ref: "#/parameters/invoiceisconverted"
        - $ref: "#/parameters/invoicesearch"
        - $ref: "#/parameters/invoicecountry"
        - $ref: "#/parameters/invoicecustomerno"
        - $ref: "#/parameters/invoiceinvoicetype"
        - $ref: "#/parameters/invoicehascredit"
        - $ref: "#/parameters/invoicexoverridetest"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: The number of invoices that matches the filters used
                    example: 7
        "400":
          description: Bad request
        "401":
          description: Token is missing
      security:
        - bearerAuth: []
  /invoices/activate:
    post:
      summary: Activate multiple invoices by invoiceNumber
      description: Activate multiple invoices
      tags:
        - invoices
      parameters:
        - in: header
          name: X-overrideTest
          description: >
            If this header value is set to "true" the internal checking for
            test mode is skipped.


            Please note that this only have effect on test systems.
          schema:
            type: string
            example: "true"
      requestBody:
        description: The requested invoice numbers of the invoices to activate
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int64
              example:
                - 1202237
                - 1202238
                - 1202239
      responses:
        "200":
          description: Successful operation. Since this is a hybrid call it will only
            return 200 or 401. Any errors will be found in the error part of the
            returned object.
          content:
            application/json:
              example:
                result:
                  "1202237":
                    number: "1202237"
                    orderid: "12346"
                    status: Factoring
                    url: https://invoice.billmate.se/12022371202237c38f1cdf279
                  "1202238":
                    number: "1202238"
                    orderid: "12346"
                    status: Factoring
                    url: https://invoice.billmate.se/12022381202238c38f1cdf273
                error:
                  "1202239": 5201 - Fakturanummer 1202239 som du efterfrågade existerar inte.
        "401":
          description: Token is missing
      security:
        - bearerAuth: []
  /invoices/cancel:
    post:
      summary: Cancel multiple invoices by invoiceNumber
      description: Cancel an invoices
      tags:
        - invoices
      requestBody:
        description: The requested invoice numbers of the invoices to cancel
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int64
              example:
                - 1202237
                - 1202238
                - 1202239
      parameters:
        - in: header
          name: X-overrideTest
          description: >
            If this header value is set to "true" the internal checking for
            test mode is skipped.


            Please note that this only have effect on test systems.
          schema:
            type: string
            example: "true"
      responses:
        "200":
          description: Successful operation. Since this is a hybrid call it will only
            return 200 or 401. Any errors will be found in the error part of the
            returned object.
          content:
            application/json:
              example:
                result:
                  "1202237":
                    number: "1202237"
                    orderid: "12346"
                    status: Cancelled
                    url: https://invoice.billmate.se/12022371202237c38f1cdf279
                  "1202238":
                    number: "1202238"
                    orderid: "12346"
                    status: Cancelled
                    url: https://invoice.billmate.se/12022381202238c38f1cdf273
                error:
                  "1202239": 5201 - Fakturanummer 1202239 som du efterfrågade existerar inte.
        "401":
          description: Token is missing
      security:
        - bearerAuth: []
  /invoices/credit:
    post:
      summary: Credit multiple invoices by invoiceNumber
      description: Credit an invoices
      tags:
        - invoices
      requestBody:
        description: The requested invoice numbers of the invoices to credit
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int64
              example:
                - 1202237
                - 1202238
                - 1202239
      parameters:
        - in: header
          name: X-overrideTest
          description: >
            If this header value is set to "true" the internal checking for
            test mode is skipped.


            Please note that this only have effect on test systems.
          schema:
            type: string
            example: "true"
      responses:
        "200":
          description: Successful operation. Since this is a hybrid call it will only
            return 200 or 401. Any errors will be found in the error part of the
            returned object.
          content:
            application/json:
              example:
                result:
                  "1202237":
                    number: "1202237"
                    orderid: "12346"
                    status: Credited
                    url: https://invoice.billmate.se/12022371202237c38f1cdf279
                  "1202238":
                    number: "1202238"
                    orderid: "12346"
                    status: Credited
                    url: https://invoice.billmate.se/12022381202238c38f1cdf273
                error:
                  "1202239": 5201 - Fakturanummer 1202239 som du efterfrågade existerar inte.
        "401":
          description: Token is missing
      security:
        - bearerAuth: []
  /invoices/statistics/services:
    get:
      summary: Get data per service
      description: Return data for services per currency
      tags:
        - invoices
      parameters:
        - $ref: "#/parameters/invoicefilter"
        - $ref: "#/parameters/invoicefrom"
        - $ref: "#/parameters/invoiceto"
        - $ref: "#/parameters/invoicedeliverydatefrom"
        - $ref: "#/parameters/invoicedeliverydateto"
        - $ref: "#/parameters/invoiceduedatefrom"
        - $ref: "#/parameters/invoiceduedateto"
        - $ref: "#/parameters/invoiceinvoicedatefrom"
        - $ref: "#/parameters/invoiceinvoicedateto"
        - $ref: "#/parameters/invoicedatepaidfrom"
        - $ref: "#/parameters/invoicedatepaidto"
        - $ref: "#/parameters/invoicedatesentfrom"
        - $ref: "#/parameters/invoicedatesentto"
        - $ref: "#/parameters/invoiceiscard"
        - $ref: "#/parameters/invoiceisswish"
        - $ref: "#/parameters/invoiceiscash"
        - $ref: "#/parameters/invoiceispartpayment"
        - $ref: "#/parameters/invoiceis14days"
        - $ref: "#/parameters/invoiceis30days"
        - $ref: "#/parameters/invoiceisfactoring"
        - $ref: "#/parameters/invoiceishandling"
        - $ref: "#/parameters/invoiceisconverted"
        - $ref: "#/parameters/invoicesearch"
        - $ref: "#/parameters/invoicecountry"
        - $ref: "#/parameters/invoicecustomerno"
        - $ref: "#/parameters/invoiceinvoicetype"
        - $ref: "#/parameters/invoicehascredit"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  SEK:
                    type: object
                    properties:
                      total:
                        type: number
                        example: 12321
                      number:
                        type: number
                        example: 906
                      services:
                        type: object
                        properties:
                          factoring:
                            type: number
                            example: 1223
                          service:
                            type: number
                            example: 12
                          direct:
                            type: number
                            example: 1234
                          ownagreement:
                            type: object
                            properties:
                              card:
                                type: number
                                example: 213
                              bank:
                                type: number
                                example: 1234
                              swish:
                                type: number
                                example: 2134
        "400":
          description: Bad request
        "401":
          description: Token is missing
      security:
        - bearerAuth: []
  /invoices/statistics/not-activted:
    get:
      summary: Get data for not activated invoices
      description: Return data for not activated invoices per currency
      tags:
        - invoices
      parameters:
        - $ref: "#/parameters/invoicefilter"
        - $ref: "#/parameters/invoicefrom"
        - $ref: "#/parameters/invoiceto"
        - $ref: "#/parameters/invoicedeliverydatefrom"
        - $ref: "#/parameters/invoicedeliverydateto"
        - $ref: "#/parameters/invoiceduedatefrom"
        - $ref: "#/parameters/invoiceduedateto"
        - $ref: "#/parameters/invoiceinvoicedatefrom"
        - $ref: "#/parameters/invoiceinvoicedateto"
        - $ref: "#/parameters/invoicedatepaidfrom"
        - $ref: "#/parameters/invoicedatepaidto"
        - $ref: "#/parameters/invoicedatesentfrom"
        - $ref: "#/parameters/invoicedatesentto"
        - $ref: "#/parameters/invoiceiscard"
        - $ref: "#/parameters/invoiceisswish"
        - $ref: "#/parameters/invoiceiscash"
        - $ref: "#/parameters/invoiceispartpayment"
        - $ref: "#/parameters/invoiceis14days"
        - $ref: "#/parameters/invoiceis30days"
        - $ref: "#/parameters/invoiceisfactoring"
        - $ref: "#/parameters/invoiceishandling"
        - $ref: "#/parameters/invoiceisconverted"
        - $ref: "#/parameters/invoicesearch"
        - $ref: "#/parameters/invoicecountry"
        - $ref: "#/parameters/invoicecustomerno"
        - $ref: "#/parameters/invoiceinvoicetype"
        - $ref: "#/parameters/invoicehascredit"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              example:
                SEK:
                  total: 25000
                  number: 100
                  creditcheckStatus:
                    approved: 50
                    pending: 25
                    rejected: 20
                    other: 5
        "400":
          description: Bad request
        "401":
          description: Token is missing
      security:
        - bearerAuth: []
  /invoices/statistics/paymentmethods:
    get:
      summary: Get data per payment method
      description: Return data for payment methods per currency
      tags:
        - invoices
      parameters:
        - $ref: "#/parameters/invoicefilter"
        - $ref: "#/parameters/invoicefrom"
        - $ref: "#/parameters/invoiceto"
        - $ref: "#/parameters/invoicedeliverydatefrom"
        - $ref: "#/parameters/invoicedeliverydateto"
        - $ref: "#/parameters/invoiceduedatefrom"
        - $ref: "#/parameters/invoiceduedateto"
        - $ref: "#/parameters/invoiceinvoicedatefrom"
        - $ref: "#/parameters/invoiceinvoicedateto"
        - $ref: "#/parameters/invoicedatepaidfrom"
        - $ref: "#/parameters/invoicedatepaidto"
        - $ref: "#/parameters/invoicedatesentfrom"
        - $ref: "#/parameters/invoicedatesentto"
        - $ref: "#/parameters/invoiceiscard"
        - $ref: "#/parameters/invoiceisswish"
        - $ref: "#/parameters/invoiceiscash"
        - $ref: "#/parameters/invoiceispartpayment"
        - $ref: "#/parameters/invoiceis14days"
        - $ref: "#/parameters/invoiceis30days"
        - $ref: "#/parameters/invoiceisfactoring"
        - $ref: "#/parameters/invoiceishandling"
        - $ref: "#/parameters/invoiceisconverted"
        - $ref: "#/parameters/invoicesearch"
        - $ref: "#/parameters/invoicecountry"
        - $ref: "#/parameters/invoicecustomerno"
        - $ref: "#/parameters/invoiceinvoicetype"
        - $ref: "#/parameters/invoicehascredit"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              example:
                SEK:
                  total: 25000
                  number: 100
                  paymentmethods:
                    invoice14:
                      total: 5000
                      number: 20
                    invoice30:
                      total: 5000
                      number: 20
                    partpayment:
                      total: 5000
                      number: 20
                    cardpayment:
                      total: 5000
                      number: 20
                    swishpayment:
                      total: 5000
                      number: 20
        "400":
          description: Bad request
        "401":
          description: Token is missing
      security:
        - bearerAuth: []
  /invoices/statistics/groupedData:
    get:
      summary: Get grouped data summed up per day and currency
      description: Returns data per day separated by currency
      tags:
        - invoices
      parameters:
        - $ref: "#/parameters/invoicefilter"
        - $ref: "#/parameters/invoicefrom"
        - $ref: "#/parameters/invoiceto"
        - $ref: "#/parameters/invoicedeliverydatefrom"
        - $ref: "#/parameters/invoicedeliverydateto"
        - $ref: "#/parameters/invoiceduedatefrom"
        - $ref: "#/parameters/invoiceduedateto"
        - $ref: "#/parameters/invoiceinvoicedatefrom"
        - $ref: "#/parameters/invoiceinvoicedateto"
        - $ref: "#/parameters/invoicedatepaidfrom"
        - $ref: "#/parameters/invoicedatepaidto"
        - $ref: "#/parameters/invoicedatesentfrom"
        - $ref: "#/parameters/invoicedatesentto"
        - $ref: "#/parameters/invoiceiscard"
        - $ref: "#/parameters/invoiceisswish"
        - $ref: "#/parameters/invoiceiscash"
        - $ref: "#/parameters/invoiceispartpayment"
        - $ref: "#/parameters/invoiceis14days"
        - $ref: "#/parameters/invoiceis30days"
        - $ref: "#/parameters/invoiceisfactoring"
        - $ref: "#/parameters/invoiceishandling"
        - $ref: "#/parameters/invoiceisconverted"
        - $ref: "#/parameters/invoicesearch"
        - $ref: "#/parameters/invoicecountry"
        - $ref: "#/parameters/invoicecustomerno"
        - $ref: "#/parameters/invoiceinvoicetype"
        - $ref: "#/parameters/invoicehascredit"
        - $ref: "#/parameters/invoicedatefield"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              example:
                SEK:
                  type: array
                  items:
                    type: object[]
                    items:
                      date: 2022-01-01
                      total: 100
        "400":
          description: Bad request
        "401":
          description: Token is missing
      security:
        - bearerAuth: []
  "/invoices/{invoiceNumber}":
    get:
      summary: Find invoice by invoiceNumber
      description: Returns an invoice
      tags:
        - invoices
      parameters:
        - name: invoiceNumber
          in: path
          description: The requested invoice number of the invoice to return
          required: true
          schema:
            type: integer
            format: int64
          example: 1202237
        - in: header
          name: X-overrideTest
          description: >
            If this header value is set to "true" the internal checking for
            test mode is skipped.


            Please note that this only have effect on test systems.
          schema:
            type: string
            example: "true"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Invoice"
        "400":
          description: Bad request
        "401":
          description: Token is missing
        "404":
          description: Invoice is not found
      security:
        - bearerAuth: []
    patch:
      summary: Update an existing invoice
      description: Update an existing invoice by invoice number
      tags:
        - invoices
      parameters:
        - name: invoiceNumber
          in: path
          description: The requested invoice number of the invoice to update
          required: true
          schema:
            type: integer
            format: int64
          example: 1202237
        - in: header
          name: X-overrideTest
          description: >
            If this header value is set to "true" the internal checking for
            test mode is skipped.


            Please note that this only have effect on test systems.
          schema:
            type: string
            example: "true"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Invoice"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/InvoiceResponse"
                  - type: object
                    properties:
                      status:
                        allOf:
                          - $ref: "#/components/schemas/InvoiceStatus"
                          - example: Created
        "400":
          description: Bad Request
        "401":
          description: Token is missing
        "404":
          description: Invoice is not found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
    delete:
      summary: Delete an invoice
      description: Cancels the invoice rather than deletes it
      tags:
        - invoices
      parameters:
        - name: invoiceNumber
          in: path
          description: The requested invoice number of the invoice to return
          required: true
          schema:
            type: integer
            format: int64
          example: 10000
        - in: header
          name: X-overrideTest
          description: >
            If this header value is set to "true" the internal checking for
            test mode is skipped.


            Please note that this only have effect on test systems.
          schema:
            type: string
            example: "true"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/InvoiceResponse"
                  - type: object
                    properties:
                      status:
                        allOf:
                          - $ref: "#/components/schemas/InvoiceStatus"
                          - example: Cancelled
        "400":
          description: Bad request
        "401":
          description: Token is missing
        "404":
          description: Invoice is not found
      security:
        - bearerAuth: []
  "/invoices/{invoiceNumber}/activate":
    post:
      summary: Activate invoice by invoiceNumber
      description: Activate an invoice
      tags:
        - invoices
      parameters:
        - name: invoiceNumber
          in: path
          description: The requested invoice number of the invoice to activate
          required: true
          schema:
            type: integer
            format: int64
          example: 1202237
        - in: header
          name: X-overrideTest
          description: >
            If this header value is set to "true" the internal checking for
            test mode is skipped.


            Please note that this only have effect on test systems.
          schema:
            type: string
            example: "true"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/InvoiceResponse"
                  - type: object
                    properties:
                      status:
                        allOf:
                          - $ref: "#/components/schemas/InvoiceStatus"
                          - example: Factoring
        "400":
          description: Bad request
        "401":
          description: Token is missing
        "404":
          description: Invoice is not found
      security:
        - bearerAuth: []
  "/invoices/{invoiceNumber}/cancel":
    post:
      summary: Cancel invoice by invoiceNumber
      description: Cancel an invoice
      tags:
        - invoices
      parameters:
        - name: invoiceNumber
          in: path
          description: The requested invoice number of the invoice to cancel
          required: true
          schema:
            type: integer
            format: int64
          example: 1202237
        - in: header
          name: X-overrideTest
          description: >
            If this header value is set to "true" the internal checking for
            test mode is skipped.


            Please note that this only have effect on test systems.
          schema:
            type: string
            example: "true"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/InvoiceResponse"
                  - type: object
                    properties:
                      status:
                        allOf:
                          - $ref: "#/components/schemas/InvoiceStatus"
                          - example: Cancelled
        "400":
          description: Bad request
        "401":
          description: Token is missing
        "404":
          description: Invoice is not found
      security:
        - bearerAuth: []
  "/invoices/{invoiceNumber}/credit":
    post:
      summary: Credit invoice by invoiceNumber
      description: Credit an invoice
      tags:
        - invoices
      parameters:
        - name: invoiceNumber
          in: path
          description: The requested invoice number of the invoice to credit
          required: true
          schema:
            type: integer
            format: int64
          example: 1202237
        - in: header
          name: X-overrideTest
          description: >
            If this header value is set to "true" the internal checking for
            test mode is skipped.


            Please note that this only have effect on test systems.
          schema:
            type: string
            example: "true"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/InvoiceResponse"
                  - type: object
                    properties:
                      status:
                        allOf:
                          - $ref: "#/components/schemas/InvoiceStatus"
                          - example: Credited
        "400":
          description: Bad request
        "401":
          description: Token is missing
        "404":
          description: Invoice is not found
      security:
        - bearerAuth: []
    get:
      summary: Get the info of the credited invoices that are credited from
        invoiceNumber
      description: Sends the info of the credited invoices
      tags:
        - invoices
      parameters:
        - name: invoiceNumber
          in: path
          description: The requested invoice number of the invoice to return
          required: true
          schema:
            type: integer
            format: int64
          example: 1202237
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  creditInvoices:
                    type: array
                    items:
                      type: number
                  creditInvoiceSum:
                    type: number
                    example: 213
        "400":
          description: Bad request
        "401":
          description: Token is missing
        "404":
          description: Invoice is not found
      security:
        - bearerAuth: []
  "/invoices/{invoiceNumber}/duplicate":
    post:
      summary: Duplicate an invoice by invoiceNumber
      description: Duplicate an invoice
      tags:
        - invoices
      parameters:
        - name: invoiceNumber
          in: path
          description: The requested invoice number of the invoice to duplicate
          required: true
          schema:
            type: integer
            format: int64
          example: 1202237
        - in: header
          name: X-overrideTest
          description: >
            If this header value is set to "true" the internal checking for
            test mode is skipped.


            Please note that this only have effect on test systems.
          schema:
            type: string
            example: "true"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/InvoiceResponse"
                  - type: object
                    properties:
                      orderid:
                        allOf:
                          - $ref: "#/components/schemas/InvoiceStatus"
                          - example: 4672437-copy
                      status:
                        allOf:
                          - $ref: "#/components/schemas/InvoiceStatus"
                          - example: Created
        "400":
          description: Bad request
        "401":
          description: Token is missing
        "404":
          description: Invoice is not found
      security:
        - bearerAuth: []
  "/invoices/{invoiceNumber}/attachments":
    get:
      summary: Get the attachments of the invoice
      description: Returns the attachments of the invoice of the merchant that owns
        the token
      tags:
        - invoices
      parameters:
        - name: invoiceNumber
          in: path
          description: The requested invoice number of the invoice
          required: true
          schema:
            type: integer
            format: int64
          example: 1202237
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AmazonS3AttachmentList"
        "401":
          description: Token is missing
        "404":
          description: Not found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
    post:
      summary: Post the attachment(s) to the invoice
      description: Place a new attachment(s) in the attachments of the invoice of a Merchant
      tags:
        - invoices
      parameters:
        - name: invoiceNumber
          in: path
          description: The requested invoice number of the invoice
          required: true
          schema:
            type: integer
            format: int64
          example: 1202237
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  Attachments:
                    type: string
                    example: sample.pdf,sample.1.pdf
        "401":
          description: Token is missing
        "404":
          description: Not found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
  "/invoices/{invoiceNumber}/attachments/{fileName}":
    get:
      summary: Get the attachment
      description: Returns the attachment
      tags:
        - invoices
      parameters:
        - name: invoiceNumber
          in: path
          description: The requested invoice number of the invoice
          required: true
          schema:
            type: integer
            format: int64
          example: 1202237
        - name: fileName
          in: path
          description: The requested fileName of the attachment of the invoice
          required: true
          schema:
            type: string
            example: attachment.pdf
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AmazonS3Attachment"
        "401":
          description: Token is missing
        "404":
          description: Not found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
    delete:
      summary: Delete a logo
      description: Removes a logo
      tags:
        - invoices
      parameters:
        - name: invoiceNumber
          in: path
          description: The requested invoice number of the invoice
          required: true
          schema:
            type: integer
            format: int64
          example: 1202237
        - name: fileName
          in: path
          description: The requested fileName of the attachment of the invoice
          required: true
          schema:
            type: string
            example: attachment.pdf
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                example: {}
        "401":
          description: Token is missing
        "404":
          description: Not found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
  "/invoices/{invoiceNumber}/split":
    post:
      summary: Split an invoice by invoiceNumber
      description: Split an invoice
      tags:
        - invoices
      parameters:
        - in: path
          name: invoiceNumber
          description: The requested invoice number of the invoice to split
          required: true
          schema:
            type: integer
            format: int64
          example: 1202237
        - in: header
          name: X-overrideTest
          description: >
            If this header value is set to "true" the internal checking for
            test mode is skipped.


            Please note that this only have effect on test systems.
          schema:
            type: string
            example: "true"
      requestBody:
        description: The number of each article row to split and how to handle handling
          and shipping
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                Articles:
                  - 1
                  - 1
                Handling: true
                Shipping: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/InvoiceResponse"
                  - type: object
                    properties:
                      orderid:
                        allOf:
                          - $ref: "#/components/schemas/InvoiceStatus"
                          - example: 4672437-copy
                      status:
                        allOf:
                          - $ref: "#/components/schemas/InvoiceStatus"
                          - example: Created
        "400":
          description: Bad request
        "401":
          description: Token is missing
        "404":
          description: Invoice is not found
      security:
        - bearerAuth: []
  /invoices/activate/precheck:
    post:
      summary: Precheck an invoice(s) before activation
      description: Precheck an invoice(s)
      tags:
        - invoices
      parameters:
        - in: header
          name: X-overrideTest
          description: >
            If this header value is set to "true" the internal checking for
            test mode is skipped.


            Please note that this only have effect on test systems.
          schema:
            type: string
            example: "true"
      requestBody:
        description: The requested invoice number(s) of the invoice(s) to pre check
          before activating them
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int64
              example:
                - 88154
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  properties:
                    code:
                      type: number
                    message:
                      type: string
                    type:
                      type: string
                example:
                  "88154":
                    code: 1005
                    message: Orgnum is test. Not possible to activate a invoice with test social
                      security number
                    type: error
        "400":
          description: Bad request
        "401":
          description: Token is missing
        "404":
          description: Invoice is not found
      security:
        - bearerAuth: []
  /languages:
    get:
      summary: Get the languages
      description: Returns a list of languages
      tags:
        - languages
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Language"
        "401":
          description: Token is missing
        "404":
          description: Not found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
  "/logos/{mm3customersid}":
    get:
      summary: Get the merchant logos by mm3customersid
      description: Returns the logos of the merchant
      tags:
        - logos
      parameters:
        - name: mm3customersid
          in: path
          description: The requested id of the customer
          required: true
          schema:
            type: integer
            format: int64
            example: 17882
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LogosResponse"
        "401":
          description: Token is missing
        "404":
          description: Not found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
    post:
      summary: Post the merchant logo
      description: Place a new logo in the logos of a Merchant
      tags:
        - logos
      parameters:
        - name: mm3customersid
          in: path
          description: The requested id of the customer
          required: true
          schema:
            type: integer
            format: int64
            example: 17882
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostLogoResponse"
        "401":
          description: Token is missing
        "404":
          description: Not found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
  "/logos/{mm3customersid}/{fileName}":
    get:
      summary: Post the merchant logo
      description: Place a new logo in the logos of a Merchant
      tags:
        - logos
      parameters:
        - name: mm3customersid
          in: path
          description: The requested id of the customer
          required: true
          schema:
            type: integer
            format: int64
            example: 17882
        - name: fileName
          in: path
          description: The requested fileName of the logo of the merchant to return
          required: true
          schema:
            type: string
            example: logo.png
      responses:
        "200":
          description: Successful operation
          content:
            image/*:
              schema:
                type: string
                format: binary
        "401":
          description: Token is missing
        "404":
          description: Not found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
    delete:
      summary: Delete a logo
      description: Removes a logo
      tags:
        - logos
      parameters:
        - name: mm3customersid
          in: path
          description: The requested id of the customer
          required: true
          schema:
            type: integer
            format: int64
            example: 17882
        - name: fileName
          in: path
          description: The requested fileName of the logo of the merchant to return
          required: true
          schema:
            type: string
            example: logo.png
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                example: {}
        "401":
          description: Token is missing
        "404":
          description: Not found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
  /merchant:
    get:
      summary: Get the merchant
      description: Returns the merchant that owns the token
      tags:
        - merchant
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Merchant"
        "401":
          description: Token is missing
        "404":
          description: Not found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
    patch:
      summary: Patch the merchant
      description: Updates the merchant that owns the token
      tags:
        - merchant
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Merchant"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Merchant"
        "401":
          description: Token is missing
        "404":
          description: Not found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
  /merchant/api-logs:
    get:
      summary: Get the api logs of the merchant
      description: Returns the api logs of the merchant that owns the token
      tags:
        - merchant
      parameters:
        - $ref: "#/parameters/merchantlimit"
        - $ref: "#/parameters/merchantstart"
        - $ref: "#/parameters/merchantapilogsfilter"
        - $ref: "#/parameters/merchantfrom"
        - $ref: "#/parameters/merchantto"
        - $ref: "#/parameters/merchantsearch"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api-Logs"
        "401":
          description: Token is missing
        "404":
          description: Not found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
  /merchant/api-logs/count:
    get:
      summary: Get the number of matching api-logs according to the supplied filters
      description: Returns object with a count representing the number of api-logs
        that matches the current filter.
      tags:
        - merchant
      parameters:
        - $ref: "#/parameters/merchantapilogsfilter"
        - $ref: "#/parameters/merchantfrom"
        - $ref: "#/parameters/merchantto"
        - $ref: "#/parameters/merchantsearch"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: The number of api-logs that matches the filters used
                    example: 7
        "400":
          description: Bad request
        "401":
          description: Token is missing
      security:
        - bearerAuth: []
  /merchant/api-callbacks:
    get:
      summary: Get the api calbacks of the merchant
      description: Returns the api callbacks of the merchant that owns the token
      tags:
        - merchant
      parameters:
        - $ref: "#/parameters/merchantlimit"
        - $ref: "#/parameters/merchantstart"
        - $ref: "#/parameters/merchantapicallbacksfilter"
        - $ref: "#/parameters/merchantfrom"
        - $ref: "#/parameters/merchantto"
        - $ref: "#/parameters/merchantsearch"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Api-Callbacks"
        "401":
          description: Token is missing
        "404":
          description: Not found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
  /merchant/api-callbacks/count:
    get:
      summary: Get the number of matching api-callbacks according to the supplied
        filters
      description: Returns object with a count representing the number of
        api-callbacks that matches the current filter.
      tags:
        - merchant
      parameters:
        - $ref: "#/parameters/merchantapicallbacksfilter"
        - $ref: "#/parameters/merchantfrom"
        - $ref: "#/parameters/merchantto"
        - $ref: "#/parameters/merchantsearch"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: The number of api-callbacks that matches the filters used
                    example: 7
        "400":
          description: Bad request
        "401":
          description: Token is missing
      security:
        - bearerAuth: []
  /merchant/api-informations:
    get:
      summary: Get the api information of the merchant
      description: Returns the api information of the merchant that owns the token
      tags:
        - merchant
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: 17882
                  secret:
                    type: string
                    example: 165964686216
        "401":
          description: Token is missing
        "404":
          description: Not found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
  /merchant/invoice-settings:
    get:
      summary: Get the merchant invoice settings
      description: Returns the invoice settings of merchant that owns the token
      tags:
        - merchant
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvoiceServiceSettings"
        "401":
          description: Token is missing
        "404":
          description: Not found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
    patch:
      summary: Patch the merchant invoice settings
      description: Updates the invoice settings of merchant that owns the token
      tags:
        - merchant
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InvoiceServiceSettings"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvoiceServiceSettings"
        "401":
          description: Token is missing
        "404":
          description: Not found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
  /register/customer:
    post:
      summary: Register a customer with company name, organization number, contact
        name, customer email and telephone
      description: Registers a customer with company name, organization number,
        contact name, customer email and telephone
      tags:
        - register
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                companyName:
                  type: string
                  example: Test-Company Name
                orgnum:
                  type: string
                  example: Test-Organization number
                contactName:
                  type: string
                  example: Test-Contact name
                customerEmail:
                  type: string
                  example: Test-Customer email
                telephone:
                  type: string
                  example: Test-Telephone
                optional:
                  type: string
                  example: Test-Optional Field
      responses:
        "200":
          description: Successful operation
          content:
            plain/text:
              schema:
                type: string
                example: ok
        "400":
          description: Missing some required properties
          content:
            plain/text:
              schema:
                oneOf:
                  - type: string
                    example: Missing company name
                  - type: string
                    example: Missing organization number
                  - type: string
                    example: Missing contact name
                  - type: string
                    example: Missing email
                  - type: string
                    example: Missing telephone number
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
  /reports:
    get:
      summary: Get the reports of a merchant
      description: Returns a list of reports of a merchant
      tags:
        - reports
      parameters:
        - $ref: "#/parameters/reportlimit"
        - $ref: "#/parameters/reportstart"
        - $ref: "#/parameters/reportfilter"
        - $ref: "#/parameters/reportfrom"
        - $ref: "#/parameters/reportto"
        - $ref: "#/parameters/reportsearch"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Report"
        "401":
          description: Token is missing
        "404":
          description: Not found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
  /reports/count:
    get:
      summary: Get the number of matching reports according to the supplied filters
      description: Returns object with a count representing the number of reports that
        matches the current filter.
      tags:
        - reports
      parameters:
        - $ref: "#/parameters/reportfilter"
        - $ref: "#/parameters/reportfrom"
        - $ref: "#/parameters/reportto"
        - $ref: "#/parameters/reportsearch"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: The number of reports that matches the filters used
                    example: 7
        "400":
          description: Bad request
        "401":
          description: Token is missing
      security:
        - bearerAuth: []
  "/reports/{mexcCustomerjournalsid}":
    get:
      summary: Find report by mexcCustomerjournalsid
      description: Returns a single report
      tags:
        - reports
      parameters:
        - name: mexcCustomerjournalsid
          in: path
          description: The requested id of the report to return
          required: true
          schema:
            type: integer
            format: int64
          example: 146647
      responses:
        "200":
          description: Successful operation
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        "401":
          description: Token is missing
        "404":
          description: Customer is not found
      security:
        - bearerAuth: []
  /reports/settlements:
    get:
      summary: Get the settlement report list
      description: Returns the list of the settlement reports
      tags:
        - reports
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SettlementReportList"
        "401":
          description: Token is missing
        "404":
          description: Not found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
  "/reports/settlements/{settlementId}":
    get:
      summary: Get the settlement report
      description: Returns the settlement reports
      tags:
        - reports
      parameters:
        - name: settlementId
          in: path
          description: The settlementId of the report
          required: true
          schema:
            type: number
            example: 123
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SettlementReportItemExport"
        "401":
          description: Token is missing
        "404":
          description: Not found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
  /reports/settlements/dates:
    get:
      summary: Get the available dates for settlement reports
      description: Returns the dated for settlement reports
      tags:
        - reports
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SettlementDates"
        "401":
          description: Token is missing
        "404":
          description: Not found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
  "/reports/settlements/{settlementId}/export/csv":
    get:
      summary: Export the settlement report in CSV format
      description: Returns the settlement reports in CSV format
      tags:
        - reports
      parameters:
        - name: settlementId
          in: path
          description: The settlementId of the report
          required: true
          schema:
            type: number
            example: 123
        - name: asExcel
          in: query
          description: Export CSV in Excel style
          required: false
          schema:
            type: number
            example: 1
        - name: delimiter
          in: query
          description: Change the field separator from the default semi-colon
          required: false
          schema:
            type: string
            example: ","
            default: ;
      responses:
        "200":
          description: Successful operation
          content:
            text/csv:
              schema:
                $ref: "#/components/schemas/SettlementReportListExportCSV"
        "401":
          description: Token is missing
        "404":
          description: Not found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
  "/reports/settlements/{settlementId}/export/xml":
    get:
      summary: Export the settlement report in XML format
      description: Returns the settlement reports in XML format
      tags:
        - reports
      parameters:
        - name: settlementId
          in: path
          description: The settlementId of the report
          required: true
          schema:
            type: number
            example: 123
      responses:
        "200":
          description: Successful operation
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/SettlementReportListCSV"
        "401":
          description: Token is missing
        "404":
          description: Not found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
  "/reports/settlements/{settlementId}/export/pdf":
    get:
      summary: Export the settlement report as a PDF
      description: Returns the settlement reports as a PDF. This is the standard
        report that is generated by the system.
      tags:
        - reports
      parameters:
        - name: settlementId
          in: path
          description: The settlementId of the report
          required: true
          schema:
            type: number
            example: 123
      responses:
        "200":
          description: Successful operation
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        "401":
          description: Token is missing
        "404":
          description: Not found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
  /reports/statistics/weekly:
    get:
      summary: Get the statistics of reports weekly
      description: Returns the statistics weekly
      tags:
        - reports
      parameters:
        - $ref: "#/parameters/reportstatisticsfilter"
        - $ref: "#/parameters/reportstatisticsfrom"
        - $ref: "#/parameters/reportstatisticsto"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    week:
                      type: number
                    total:
                      type: number
                  example:
                    week: 27
                    total: 2312312.5
        "401":
          description: Token is missing
        "404":
          description: Not found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
  /reports/statistics/monthly:
    get:
      summary: Get the statistics of reports monthly
      description: Returns the statistics monthly
      tags:
        - reports
      parameters:
        - $ref: "#/parameters/reportstatisticsfilter"
        - $ref: "#/parameters/reportstatisticsfrom"
        - $ref: "#/parameters/reportstatisticsto"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: object
                    properties:
                      month:
                        type: number
                      total:
                        type: number
                example:
                  "2022":
                    - month: 2
                      total: 2312312.5
        "401":
          description: Token is missing
        "404":
          description: Not found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
  /users:
    get:
      summary: Get the users of a merchant
      description: Returns a list of users of a merchant
      tags:
        - users
      parameters:
        - in: query
          name: limit
          schema:
            default: 100
            type: integer
          example: 2
        - in: query
          name: start
          schema:
            default: 0
            type: integer
          example: 0
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "401":
          description: Token is missing
        "404":
          description: Not found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
    post:
      summary: Place a user for a Merchant
      description: Place a new user in the customers of a Merchant
      tags:
        - users
      parameters:
        - in: query
          name: nomail
          description: If set to non-zero value, no email with password link will be sent
            to the user when record is created
          schema:
            type: number
            example: 1
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/User"
                - type: object
                  properties:
                    password:
                      type: string
                      example: password
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Token is missing
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
  "/users/{mm3useraccountsid}":
    get:
      summary: Find user by mm3useraccountsid
      description: Returns a single user
      tags:
        - users
      parameters:
        - name: mm3useraccountsid
          in: path
          description: The requested id of the user to return
          required: true
          schema:
            type: integer
            format: int64
          example: 1202237
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Token is missing
        "404":
          description: User is not found
      security:
        - bearerAuth: []
    patch:
      summary: Update an existing user
      description: Update an existing user by mm3useraccountsid
      tags:
        - users
      parameters:
        - name: mm3useraccountsid
          in: path
          description: The requested id of the user to return
          required: true
          schema:
            type: integer
            format: int64
          example: 1202237
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/User"
                - type: object
                  properties:
                    password:
                      type: string
                      example: password
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Token is missing
        "404":
          description: User is not found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
    delete:
      summary: Delete a user
      description: Removes a user. Please note that the user isn't deleted but rather
        set to inactive.
      tags:
        - users
      parameters:
        - name: mm3useraccountsid
          in: path
          description: The requested id of the user to return
          required: true
          schema:
            type: integer
            format: int64
          example: 10000
        - name: forceDelete
          in: query
          description: If set to 1 then the user will be deleted instead of just
            inactivated.
          required: false
          schema:
            type: integer
            format: int64
          example: 1
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Token is missing
        "404":
          description: User is not found
      security:
        - bearerAuth: []
  /users/forgotpassword:
    post:
      summary: Reses the users password and send a mail with a new login link
      description: Resets the users password and sends a mail with a new login link
      tags:
        - users
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: username@example.com
      responses:
        "200":
          description: Successful operation
          content:
            plain/text:
              schema:
                type: string
                example: ok
        "400":
          description: The user is identified but has no valid email address
          content:
            plain/text:
              schema:
                type: string
                example: bad
        "404":
          description: Couldn't identify the user
          content:
            plain/text:
              schema:
                type: string
                example: bad
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
  /whitelists:
    get:
      summary: Get the list of whitelists
      description: Returns a list of whitelists
      tags:
        - whitelists
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Whitelists"
        "401":
          description: Token is missing
        "404":
          description: Not found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
    post:
      summary: Place a credit
      description: Place a new credit
      tags:
        - whitelists
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Whitelists"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Whitelists"
        "401":
          description: Token is missing
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
  "/whitelists/{mexcCreditwhitelistsid}":
    get:
      summary: Find credit by mexcCreditwhitelistsid
      description: Returns a single credit
      tags:
        - whitelists
      parameters:
        - name: mexcCreditwhitelistsid
          in: path
          description: The requested id
          required: true
          schema:
            type: integer
            format: int64
          example: 1202237
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Whitelists"
        "401":
          description: Token is missing
        "404":
          description: Customer is not found
      security:
        - bearerAuth: []
    patch:
      summary: Update an existing credit
      description: Update an existing credit by mexcCreditwhitelistsid
      tags:
        - whitelists
      parameters:
        - name: mexcCreditwhitelistsid
          in: path
          description: The requested id
          required: true
          schema:
            type: integer
            format: int64
          example: 1202237
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Whitelists"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Whitelists"
        "401":
          description: Token is missing
        "404":
          description: Customer is not found
        "500":
          description: Internal server error
      security:
        - bearerAuth: []
    delete:
      summary: Delete a credit
      description: Removes a credit
      tags:
        - whitelists
      parameters:
        - name: mexcCreditwhitelistsid
          in: path
          description: The requested id
          required: true
          schema:
            type: integer
            format: int64
          example: 10000
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                  mexcParamvaluesetsid:
                    type: integer
                example:
                  result: Removed
                  mexcParamvaluesetsid: 10000
        "401":
          description: Token is missing
        "404":
          description: Customer is not found
      security:
        - bearerAuth: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Article:
      type: object
      description: Article object
      properties:
        mexcParamvaluesetsid:
          type: string
          example: 123456
        date:
          type: string
          format: date-time
          example: 2022-12-21T12:00:00Z
        articlenr:
          type: string
          example: abc123
        articlename:
          type: string
          example: Basic article
        articlegroup:
          type: string
          example: Basic
        price:
          type: number
          example: 123.45
        vat:
          type: string
          example: 25
        unit:
          type: string
          example: st
        currency:
          type: string
          example: SEK
        mexcModulesid:
          type: number
          example: 12345
        mm3servicesid:
          type: number
          example: 12345
        changedate:
          type: string
          format: date-time
          example: 2022-12-21T12:00:00Z
        status:
          type: string
          example: ACTIVE
        name2:
          type: string
          example: Additional name
        workcostenabled:
          type: string
          example: null
        stock:
          type: number
          example: 123
        pricelist:
          type: string
          example: null
    Conversation:
      type: object
      description: Conversation object
      properties:
        bmConversationsid:
          type: integer
          example: 1000
          readOnly: true
        mm3customersid:
          type: integer
          example: 1000
          readOnly: true
        mm3useraccountsid:
          type: integer
          example: 1000
          readOnly: true
        title:
          type: string
          example: Test-title
        message:
          type: string
          example: Thanks to our fantastic customers
          writeOnly: true
        status:
          type: string
          enum:
            - Unread
            - Opened
          example: Opened
        bmstatus:
          type: string
          enum:
            - Unread
            - Opened
          example: Unread
        createdAt:
          type: string
          format: date-time
          readOnly: true
          example: 2022-12-21T12:00:00Z
        changedAt:
          type: string
          format: date-time
          readOnly: true
          example: 2022-12-21T12:00:00Z
    Message:
      type: object
      description: Message object
      properties:
        bmConversationmessagesid:
          type: integer
          example: 2000
          readOnly: true
        bmConversationsid:
          type: integer
          example: 1000
          readOnly: true
        message:
          type: string
          example: Thanks to our fantastic customers
        source:
          type: string
          enum:
            - MERCHANT
            - BILLMATE
          readOnly: true
          example: MERCHANT
        createdAt:
          type: string
          format: date-time
          readOnly: true
          example: 2022-12-21T12:00:00Z
        changedAt:
          type: string
          format: date-time
          readOnly: true
          example: 2022-12-21T12:00:00Z
    Country:
      type: object
      properties:
        txtEnglish:
          type: string
          example: Sweden
        txtSwedish:
          type: string
          example: Sverige
        key:
          type: string
          example: SE
    Currency:
      type: object
      properties:
        currency:
          type: string
          example: SEK
        name:
          type: string
          example: Swedish krona/kronor
        symbol:
          type: string
          example: kr
    addressResponse:
      type: object
      properties:
        firstname:
          type: string
          description: First name of the customer
          example: Kalle
        lastname:
          type: string
          description: Last name of the customer
          example: Svensson
        company:
          type: string
          description: Company name
          example: Test AB
        street:
          type: string
          description: The customers street address
          example: Teststreet
        zip:
          type: integer
          description: The customers postnumber
          example: 12341
        city:
          type: string
          description: The customers city
          example: Testcity
        country:
          type: string
          description: The customers country
          example: SE
        phone:
          type: string
          description: The customers phone number
          example: 46701234678
        email:
          type: string
          description: The customers billing email
          example: billing@testcompany.com
    Customer:
      type: object
      properties:
        mexcParamvaluesetsid:
          type: integer
          example: 1000
          readOnly: true
        date:
          type: string
          example: 2022-08-07T15:50:57.000Z
          readOnly: true
        customerid:
          type: string
          example: Test-Customer
        name:
          type: string
          example: Test-Name
        address:
          type: string
          example: Test-Address
        postcode:
          type: string
          example: Test-Post code
        postoffice:
          type: string
          example: Test-Post office
        state:
          type: string
          example: Test-state
        countrycode:
          type: string
          example: se
        telephone:
          type: string
          example: Test-Telephone
        fax:
          type: string
          example: Test-Fax
        mobile:
          type: string
          example: Test-Mobile
        deliveryaddress:
          type: string
          example: Test-Delivery address
        deliverypostcode:
          type: string
          example: Test-Delivery post code
        deliverypostoffice:
          type: string
          example: Test-Delivery office
        email:
          type: string
          example: test@billmate.se
        reference:
          type: string
          example: Test-Reference
        companyno:
          type: string
          example: Test-Company no
        vatregno:
          type: string
          example: Test-vatreg no
        paymentterms:
          type: string
          example: Test-Payment
        rebate:
          type: string
          example: Test-Rebate
        currency:
          type: string
          example: SEK
        language:
          type: string
          example: sv
        export:
          type: string
          example: Test-Export
        handlingcharge:
          type: string
          example: Test-Charge
        reversetax:
          type: string
          example: Test-Reverse tax
        mexcModulesid:
          type: integer
          example: 1000
          readOnly: true
        mm3servicesid:
          type: integer
          example: 1000
          readOnly: true
        country:
          type: string
          example: Sweden
        creditlimit:
          type: string
          example: Test-Credit limit
        customertypecode:
          type: string
          example: Test-Customer type code
        deliveryterms:
          type: string
          example: Test-Delivery terms
        deliverymethod:
          type: string
          example: Test-Delivery method
        deliveryname:
          type: string
          example: Test-Delivery name
        deliveryaddress2:
          type: string
          example: Test-Delivery address2
        deliverycountrycode:
          type: string
          example: Test-Delivery country code
        deliverycountry:
          type: string
          example: Test-Delivery country
        profile:
          type: string
          example: Test-Profile
        name2:
          type: string
          example: Test-Name2
        address2:
          type: string
          example: Test-Address2
        propertydesignation:
          type: string
          example: Test-Property designation
        housingassociationregno:
          type: string
          example: Test-Housing association reg no
        status:
          type: string
          example: Test-Status
        statuslog:
          type: string
          example: Test-Status log
        longitude:
          type: string
          example: Test-Longitude
        latitude:
          type: string
          example: Test-Latitude
        glncode:
          type: string
          example: Test-Gln code
        reference_order:
          type: string
          example: Test-Reference order
        email_order:
          type: string
          example: Test-Email order
        reference_offer:
          type: string
          example: Test-Reference offer
        email_offer:
          type: string
          example: Test-Email offer
        notes:
          type: string
          example: Test-Notes
        origin:
          type: string
          example: Test-Origin
        pricelist:
          type: string
          example: Test-Price list
        crediflowPartyId:
          type: string
          example: Test-Credit flow party id
    CustomerKnowledgeMailSend:
      type: object
      properties:
        status:
          type: string
          example: ok
        message:
          type: string
          example: document_sent
        error:
          type: integer
          example: 0
        errorCode:
          type: string
          example: ""
    CustomerKnowledgeBankidCollectResponse:
      type: object
      properties:
        orderRef:
          type: string
        status:
          type: string
        hintCode:
          type: string
    CustomerKnowledgeBankidSignSuccessMessage:
      type: object
      properties:
        orderRef:
          type: string
        autoStartToken:
          type: string
        qrStartToken:
          type: string
        hashes:
          type: string
    CustomerKnowledgeBankidSignErrorMessage:
      type: object
      properties:
        error:
          type: string
        params:
          type: object
          properties:
            personalNumber:
              type: string
            endUserIp:
              type: string
    CustomerKnowledgeCompany:
      type: object
      properties:
        companyName:
          type: string
          example: a
        orgnum:
          type: string
          example: a
        nofEmployees:
          type: string
          example: a
        contact:
          type: string
          example: a
        typeOfBusiness:
          type: string
          example: a
        yourMainCustomer:
          type: string
          example: a
        foundedTime:
          type: string
          example: a
        moneyPerMonth:
          type: string
          example: a
        averageTransaction:
          type: string
          example: a
        transactionPerMonth:
          type: string
          example: a
        usedServices:
          type: string
          example: a
        explanationService:
          type: string
          example: a
        businessFinanced:
          type: string
          example: a
        explanationBusiness:
          type: string
          example: a
        businessCountry:
          type: string
          example: a
        paymentsCountry:
          type: string
          example: a
        paymentsAbroadPerMonth:
          type: string
          example: a
        politicPersons:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: a
              pno:
                type: string
                example: a
              interest:
                type: string
                example: a
              pepOrRca:
                type: string
                example: a
        ownershipStructure:
          type: string
        hasAdditionalOwners:
          type: string
        additionalOwners:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: a
              pno:
                type: string
                example: b
    CustomerKnowledgeAssociation:
      type: object
      properties:
        name:
          type: string
          example: Billmate AB
        pno:
          type: string
          example: b
        phoneNumber:
          type: string
          example: c
        mail:
          type: string
          example: d
        associationName:
          type: string
          example: g
        orgnum:
          type: string
          example: h
        signatoryName:
          type: string
          example: p
        signatoryPno:
          type: string
          example: g
        leaderOfAssociation:
          type: string
          example: j
        leaderPno:
          type: string
          example: q
        hasPEPorRCA:
          type: string
          example: t
        pnoOfPEPorRCA:
          type: array
          items:
            type: integer
        lastMeetingTime:
          type: string
          example: o
        perYearProfit:
          type: string
          example: b
        transactionPerMonth:
          type: string
          example: t
        nofMembers:
          type: string
          example: r
        hasChanges:
          type: string
          example: c
        hasIncomingChanges:
          type: string
          example: ö
    AmazonS3Attachment:
      type: object
      properties:
        AcceptRanges:
          type: string
          example: bytes
        LastModified:
          type: string
          example: 2022-08-25T12:05:52.000Z
        ContentLength:
          type: number
          example: 28846
        ETag:
          type: string
          example: 230f0015b0475438892862e564b8a8a7
        ContentType:
          type: string
          example: application/octet-stream
        Metadata:
          type: object
          example: {}
        Body:
          type: object
          properties:
            type:
              type: string
              example: Buffer
            data:
              type: array
              items:
                type: integer
                example: 10000
    AmazonS3AttachmentList:
      type: object
      properties:
        Key:
          type: string
          example: attachments/17882/111731/attachment.pdf
        LastModified:
          type: string
          example: 2022-08-25T11:57:37.000Z
        ETag:
          type: string
          example: 230f0015b0475438892862e564b8a8a7
        ChecksumAlgorithm:
          type: array
          items:
            type: string
            enum:
              - SHA-1
              - SHA-256
              - CRC32
              - or "CRC32C"
          example: SHA-1
        Size:
          type: number
          example: 28846
        StorageClass:
          type: string
          example: STANDARD
        Owner:
          type: object
          properties:
            DisplayName:
              type: string
              example: amazonservices
            ID:
              type: string
              example: 5062f1fec6ea6ca653f3063ab7131ad2f8b37503644b47cb0e6a93220106e791
    InvoiceRaw:
      type: object
      description: The raw invoice definition
      properties:
        mexcCustomerinvoicesid:
          type: integer
          description: Database internal invoice id
          example: 1234
        mm3servicesid:
          type: integer
          description: Service ID
          example: 123
        mexcModulesid:
          type: integer
          description: Module ID
          example: 123
        flags:
          type: object
          description: Flags for internal use
          properties:
            type:
              type: string
              description: Type of data. Should be 'Buffer'
              example: Buffer
            data:
              type: array
              description: Byte values representing flags
              items:
                type: integer
        mexcParamvaluesetsid_customer:
          type: integer
          example: 123
        date:
          type: string
          format: date
          description: Date for the invoice
          example: 2022-08-15
        comments:
          type: string
          description: Comments added to this invoice
          example: This is a comment
        fileurl:
          type: string
          description: Url for attached file
        status:
          type: string
          enum:
            - Created
            - Paid
          description: The invoice status
          example: Created
        createddate:
          type: string
          format: date-time
          description: Invoice created date
          example: 2022-08-15T12:00:22.000Z
        sentdate:
          type: string
          format: date-time
          description: Invoice sent date. Is null if not yet sent
          example: null
        invoicedate:
          type: string
          format: date-time
          description: The invoice date for the invoice
          example: 2022-08-15T12:00:00.000Z
        duedate:
          type: string
          format: date-time
          description: The due date for the invoice
          example: 2022-09-14T12:00:00.000Z
        deliverydate:
          type: string
          format: date
          description: The date for the delivery
          example: 2022-08-15
        currency:
          type: string
          description: The currency used in this invoice
          example: SEK
        interest:
          type: string
          description: The interest for delayed payments
          example: 11.00%
        invoiceid_real:
          type: integer
          description: The real invoice id
          example: 123456
        customername:
          type: string
          description: The name of the customer
          example: Nisse Hult
        customerno:
          type: string
          description: Customer number for this customer
          example: ""
        statuslog:
          type: string
          description: Internal logging information
        street:
          type: string
          description: Street name
          example: Gatan 1
        postalcode:
          type: string
          description: ZIP code
          example: "12345"
        city:
          type: string
          description: City
          example: Testinge
        yourreference:
          type: string
          description: Reference of the purchaser
          example: Purchaser N.N.
        ourreference:
          type: string
          description: Reference of the seller
          example: Seller N.N.
        invoicetype:
          type: string
          enum:
            - f
          description: Type of invoice
          example: f
        creditinvoiceid:
          type: integer
          description: The invoicenumber for the credit invoice. Null if none exists
          example: null
        housework:
          type: integer
          description: Housework
          example: 0
        houseid:
          type: string
          description: Id for the house
        houseorgnr:
          type: string
          description: Orgno for the house
        paymentterms:
          type: integer
          description: Id for the payment terms used
          example: 14
        topay:
          type: string
          description: amount to pay
          example: 123
        mexcCustomeroffersid:
          type: integer
          description: Reference to a customer offer
          example: 0
        offerid_real:
          type: integer
          description: The actual reference for the offer
          example: 0
        mexcCustomerordersid:
          type: integer
          description: Reference to the internal order id if any
          example: 0
        orderid_real:
          type: integer
          description: The actual reference for the order
          example: 0
        withtax:
          type: integer
          description: Values with tax or not
          example: 1
        sharing_reductions:
          type: string
        paiddate:
          type: string
          format: date-time
          description: When the invoice was paid. Defaults to "0000-00-00 00:00:00"
          example: 0000-00-00 00:00:00
        balancedue:
          type: string
          description: The amount due
        handlingcharge:
          type: string
          description: Amount for handling
          example: "0"
        freight:
          type: string
          description: Amount for freight
          example: "0"
        projectname:
          type: string
          description: Name of the project
          example: project X
        distributor_status:
          type: string
          description: The status for the distributor
          example: null
        deliveryterms:
          type: string
          description: Terms for delivery
          example: null
        delivery:
          type: string
          description: Information about delivery
          example: null
        rounding:
          type: string
          description: Amount for rounding
          example: "0"
        yourorder:
          type: string
          description: Customer order number
          example: "1234556789"
        orgnum:
          type: string
          description: Personal number or organisation number for the purchaser
          example: 000000-0000
        reminderfee:
          type: string
          description: Reminder fee
          example: null
        attachment:
          type: string
          description: Attachments
          example: null
        address2:
          type: string
          description: Second line of address
          example: ""
        logopath:
          type: string
          description: Path for logo
          example: null
        ocr:
          type: string
          description: OCR number, if any
          example: null
        deliveryenabled:
          type: integer
          description: Status if delivery is enabled
          example: 1
        country:
          type: string
          description: Name of the country
          example: Sverige
        language:
          type: string
          description: Two character short language name according to ISO-639-1
          example: sv
        email:
          type: string
          description: Emailaddress
          example: nisse.hult@example.com
        creditcheck:
          type: string
          description: Status for the credit check
          example: Pending
        json_data:
          type: string
          description: Extra data in JSON format
          example: "[]"
        hash:
          type: string
          description: The hashvalue for validating data
          example: 29220704685725e3a09002f3794a67562334e220
        ip:
          type: string
          description: The ip address used
          example: ::1
        phonenumber:
          type: string
          description: Phone number
          example: "0700000000"
        enduserid:
          type: integer
          description: End-user id
          example: 0
        payment_id:
          type: string
          description: Reference to the payment id
          example: null
        batch_id:
          type: string
          description: Processing batch id
          example: null
        commission_percentage:
          type: integer
          description: Commission percentage
          example: null
        commission_fee:
          type: integer
          description: Commission fee
          example: null
        glncode:
          type: string
          description: GLN code
          example: null
        awsSESmsgid:
          type: string
        mexcCreditchecksid:
          type: integer
          description: Id for the credit check
          example: 0
        mpuResponse:
          type: string
        mpaStatus:
          type: string
        mpaComments:
          type: string
        transactionId:
          type: string
          description: Transaction id
          example: null
        mm3useraccountsid:
          type: integer
          description: User account id
          example: null
        mexcQuickpaymentsid:
          type: string
        swedbankpayId:
          type: string
        attachmentFiles:
          type: array
          items:
            type: string
          readOnly: true
          example:
            - attachment1.pdf
        jsonData:
          type: object
          readOnly: true
          example:
            pclass: -1
        JSON:
          type: object
          readOnly: true
          example:
            delivery: {}
            Cart: {}
            Avrakning: {}
            PaymentData: {}
            InternallyData: {}
        statuslogRows:
          type: array
          readOnly: true
          items:
            type: string
          example:
            - "<b>2022-01-01 08:29:15,</b> Faktura annulleras via API
              (2,0):  OnlineBillmate.v2 apiLogsid: <span
              class='apiLogsid'>234567</span>"
            - 2022-01-01 08:05:29, Consumer, PDF is opened
            - "<b>2022-01-01 07:51:28,</b> Faktura skapas med API (Ny):
              Pluginname:BillMate:1.0 apiLogsid: <span
              class='apiLogsid'>123456</span>"
            - "<b>2022-01-01 07:51:28,</b> Faktura skapas med API (Ny):
              Pluginname:BillMate:1.0 apiLogsid: <span
              class='apiLogsid'>123456</span>"
        statuslogFiltered:
          type: array
          readOnly: true
          items:
            type: string
          example:
            - "<b>2022-01-01 08:29:15,</b> Faktura annulleras via API
              (2,0):  OnlineBillmate.v2 apiLogsid: <span
              class='apiLogsid'>234567</span>"
            - "<b>2022-01-01 07:51:28,</b> Faktura skapas med API (Ny):
              Pluginname:BillMate:1.0 apiLogsid: <span
              class='apiLogsid'>123456</span>"
            - "<b>2022-01-01 07:51:28,</b> Faktura skapas med API (Ny):
              Pluginname:BillMate:1.0 apiLogsid: <span
              class='apiLogsid'>123456</span>"
        biFlags:
          type: string
          readOnly: true
          example: 148713242640,
        INVOCE_FLAGS_SEND:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_PAPER:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_MAIL2CUSTOMER:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_EBREV:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_FACTORING:
          type: boolean
          readOnly: true
          example: true
        INVOCE_FLAGS_HANDLING:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_SENTBYDISTRIBUTOR:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_CARD:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_BANK:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_CREDITCREATED:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_PARTPAYMENT:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_CASH:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_CHECKOUT:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_SIMPLE:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_RECURRING_SOURCE:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_RECURRING_DEBITS:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_AUTOCREDIT:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_EXPORTED2DISTRIBUTOR:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_EFAKTURAISAVAILABLE:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_CHATUNREAD:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_QUEUED2SEND:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_SENT2INKASSO:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_FAILED2SEND:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_SENT2STRALFORS:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_SENT2TIETO:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_SWISH:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_AVRAKNAT:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_REGRESS:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_MONTHLYREPORTED:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_MULPURINFORMED:
          type: boolean
          readOnly: true
          example: true
        INVOCE_FLAGS_QUEUED2CREATEPDF:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_CREDITCHECKPENDING:
          type: boolean
          readOnly: true
          example: true
        INVOCE_FLAGS_BILLMATEAGREMENT:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_BILLMATEFEE:
          type: boolean
          readOnly: true
          example: true
        INVOCE_FLAGS_QUEUED2AUTOCANCEL:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_BILLMATEFEECREDITTOBECHECKED:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_ISINDISTRIBUTORSLIST:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_QUEUEDPENDING2SEND:
          type: boolean
          readOnly: true
          example: true
        INVOCE_FLAGS_REVIEW:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_STATUS_DUE:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_STATUS_COLLECTION:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_ISBOUGHT:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_ISREGRESSABLE:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_CREDIFLOW_EFAKTURA:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_CREDIFLOW_EFAKTURA_QUEUED:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_CREDIFLOW_EFAKTURA_SENT:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_INTEGRATION_ISEXPORTED:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_CONFIRMED_BY_ACTIVATION:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_PAYMENT_EXPORTED:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_PAUSED:
          type: boolean
          readOnly: true
          example: false
        INVOCE_FLAGS_PAYMENTFLOW2:
          type: boolean
          readOnly: true
          example: false
        isFactoring:
          type: boolean
          readOnly: true
          example: true
        isService:
          type: boolean
          readOnly: true
          example: false
        isDirect:
          type: boolean
          readOnly: true
          example: false
        isOwnAgreement:
          type: boolean
          readOnly: true
          example: false
        paymentmethod:
          type: string
          readOnly: true
          example: 14Days
    Invoice:
      type: object
      description: The invoice structure handled by the legacy API
      properties:
        PaymentData:
          type: object
          properties:
            method:
              type: string
              example: "1"
            paymentplanid:
              type: string
              example: ""
            currency:
              type: string
              example: SEK
            language:
              type: string
              example: sv
            country:
              type: string
              example: SE
            autoactivate:
              type: string
              example: "0"
            orderid:
              type: string
              example: P123456789TXXxX
            logo:
              type: string
              example: Logo2.jpg
            accepturl:
              type: string
              example: https://webhook.site/ccb4825c-755b-47b2-95c9-4d6f95b573b1
            cancelurl:
              type: string
              example: https://webhook.site/ccb4825c-755b-47b2-95c9-4d6f95b573b1
            callbackurl:
              type: string
              example: https://webhook.site/ccb4825c-755b-47b2-95c9-4d6f95b573b1
            status:
              type: string
              example: Created
            paymentid_related:
              type: string
              example: ""
            url:
              type: string
              example: https://api.development.billmate.se/invoice/17882/20220817607e1295196ea16544a476b022b1fab8
        PaymentInfo:
          type: object
          properties:
            paymentdate:
              type: string
              format: date
              example: 2022-08-15
            paymentterms:
              type: string
              example: "14"
            yourreference:
              type: string
              example: Purchaser X
            ourreference:
              type: string
              example: Seller Y
            projectname:
              type: string
              example: Project Z
            deliverymethod:
              type: string
              example: Post
            deliveryterms:
              type: string
              example: FOB
            autocredit:
              type: string
              example: "false"
            invoiceStatus:
              type: string
              example: ""
            balancedue:
              type: string
              example: "231700"
        Card:
          type: object
          properties:
            promptname:
              type: string
              readOnly: true
              example: ""
            3dsecure:
              type: string
              readOnly: true
              example: ""
            recurring:
              type: string
              readOnly: true
              example: ""
            recurringnr:
              type: string
              readOnly: true
              example: ""
            accepturl:
              type: string
              readOnly: true
              example: https://www.mystore.se/completedpayment
            cancelurl:
              type: string
              readOnly: true
              example: https://www.mystore.se/failedpayment
            returnmethod:
              type: string
              readOnly: true
              example: ""
            callbackurl:
              type: string
              readOnly: true
              example: https://www.mystore.se/callback.php
        Customer:
          type: object
          properties:
            nr:
              type: string
              example: "12"
            pno:
              type: string
              description: Personal number or organisation number
              example: 550101-1018
            Billing:
              type: object
              properties:
                firstname:
                  type: string
                  example: Testperson
                lastname:
                  type: string
                  example: Approved
                company:
                  type: string
                  example: Company
                street:
                  type: string
                  example: Teststreet
                street2:
                  type: string
                  example: Street2
                zip:
                  type: string
                  example: "12345"
                city:
                  type: string
                  example: Testcity
                country:
                  type: string
                  example: SE
                phone:
                  type: string
                  example: 0712-345678
                email:
                  type: string
                  example: test@developer.billmate.se
            Shipping:
              type: object
              properties:
                firstname:
                  type: string
                  example: Testperson
                lastname:
                  type: string
                  example: Approved
                company:
                  type: string
                  example: Company
                street:
                  type: string
                  example: Teststreet
                street2:
                  type: string
                  example: Shipping Street2
                zip:
                  type: string
                  example: "12345"
                city:
                  type: string
                  example: Testcity
                country:
                  type: string
                  example: SE
                phone:
                  type: string
                  example: 0711-345678
        Articles:
          type: array
          items:
            type: object
            properties:
              artnr:
                type: string
                example: A123
              title:
                type: string
                example: Article X
              quantity:
                type: string
                example: "2"
              aprice:
                type: string
                example: "1234"
              discount:
                type: string
                example: "0"
              withouttax:
                type: string
                example: "2468"
              taxrate:
                type: string
                example: "25"
        Cart:
          type: object
          properties:
            Handling:
              type: object
              properties:
                withouttax:
                  type: string
                  example: "1000"
                taxrate:
                  type: string
                  example: "25"
            Shipping:
              type: object
              properties:
                withouttax:
                  type: string
                  example: "3000"
                taxrate:
                  type: string
                  example: "25"
            Total:
              type: object
              properties:
                withouttax:
                  type: string
                  example: "185325"
                tax:
                  type: string
                  example: "46331"
                rounding:
                  type: string
                  example: "44"
                withtax:
                  type: string
                  example: "231700"
        apiLogsid:
          type: string
          example: "386151"
          readOnly: true
        apiVersion:
          type: string
          example: 2.3.0
          readOnly: true
        apiClient:
          type: string
          example: OnlineBillmate.v2
          readOnly: true
    InvoiceResponse:
      type: object
      properties:
        number:
          type: string
          description: Invoice number
          example: "5816802"
        orderid:
          type: string
          description: Order ID
          example: P123456789TXXxX
        url:
          type: string
          description: Direct link to the invoice in the legacy API
          example: https://api.development.billmate.se/invoice/17882/20220817607e1295196ea16544a476b022b1fab8
        status:
          type: string
          description: Invoice status
    InvoiceStatus:
      type: string
      enum:
        - Approved
        - Cancelled
        - Created
        - E-brev
        - E-brevsent
        - Factoring
        - Handling
        - Paid
        - Partpayment
        - Sent
    Language:
      type: object
      properties:
        txtEnglish:
          type: string
          example: Swedish
        txtSwedish:
          type: string
          example: Svenska
        key:
          type: string
          example: sv
    PostLogoResponse:
      type: object
      properties:
        ETag:
          type: string
          example: 230f0015b0475438892862e564b8a8a7
        Location:
          type: string
          example: https://test-billmate.s3.eu-west-1.amazonaws.com/logos/17882/logo.png
        key:
          type: string
          example: logos/17882/logo.png
        Bucket:
          type: string
          example: test-billmate
    LogosResponse:
      type: object
      properties:
        Paths:
          type: array
          items:
            type: string
            example: logos/17882/test.png
        Contents:
          type: object
          properties:
            Key:
              type: string
              example: logos/17882/logo.png
            LastModified:
              type: string
              example: 2022-08-25T11:57:37.000Z
            ETag:
              type: string
              example: 230f0015b0475438892862e564b8a8a7
            ChecksumAlgorithm:
              type: array
              items:
                type: string
                enum:
                  - SHA-1
                  - SHA-256
                  - CRC32
                  - or "CRC32C"
              example: SHA-1
            Size:
              type: number
              example: 28846
            StorageClass:
              type: string
              example: STANDARD
            Owner:
              type: object
              properties:
                DisplayName:
                  type: string
                  example: amazonservices
                ID:
                  type: string
                  example: 5062f1fec6ea6ca653f3063ab7131ad2f8b37503644b47cb0e6a93220106e791
    Api-Callbacks:
      type: object
      properties:
        apiCallbacksid:
          type: string
          example: 1
        eid:
          type: number
          example: 17882
        version:
          type: string
          example: 2.1.6
        orderid_real:
          type: string
          example: P1234567891581073915
        createdtime:
          type: string
          example: 2020-02-07T10:13:05.000Z
        url:
          type: string
          example: https://enw5th3sj7fd.x.pipedream.net/
        request:
          type: object
          properties:
            credentials:
              type: object
              properties:
                hash:
                  type: string
                  example: 6bf77df645fc8bf761fa4791019681c27d6df08ddb93011aecd1de287951caedd1c87dd8450a59e878b094502e396c133efc4f46ceec4c6520f987927c7c3263
            data:
              type: object
              properties:
                number:
                  type: string
                  example: 810652
                status:
                  type: string
                  example: Paid
                url:
                  type: string
                  example: ""
                orderid:
                  type: string
                  example: P1234567891581073915
                carddata:
                  type: object
                  properties:
                    maskedcardno:
                      type: string
                      example: 476173******0416
                    cardholdername:
                      type: string
                      example: CARDHOLDER
                    bin:
                      type: string
                      example: 21591
                    expirymonth:
                      type: string
                      example: 12
                    expiryyear:
                      type: string
                      example: 2022
        response:
          type: string
          example: null
        nbroffails:
          type: number
          example: 0
        nextcall:
          type: string
          example: 2020-02-07T10:13:05.000Z
        success:
          type: number
          example: 0
        return_method:
          type: string
          example: GET
    Api-Logs:
      type: object
      properties:
        apiLogsid:
          type: number
          example: 1
        eid:
          type: number
          example: 2
        version:
          type: string
          example: Test-Version
        client:
          type: string
          example: Test-Client
        class:
          type: string
          example: Test-Class
        function:
          type: string
          example: Test-Function
        method:
          type: string
          example: Test-Method
        params:
          type: object
          properties:
            CheckoutData:
              type: object
              properties:
                companyView:
                  type: boolean
                  example: "false"
                showPhoneOnDelivery:
                  type: boolean
                  example: "false"
                paymenttermsPrivate:
                  type: string
                  example: 14
                paymenttermsCompany:
                  type: string
                  example: 30
                billingPhoneMandatory:
                  type: boolean
                  example: true
                terms:
                  type: string
                  example: https://billmate.se
                privacyPolicy:
                  type: string
                  example: https://billmate.se
                easy:
                  type: boolean
                  example: false
                redirectOnSuccess:
                  type: boolean
                  example: true
                hideShippingAddress:
                  type: boolean
                  example: false
            PaymentData:
              type: object
              properties:
                currency:
                  type: string
                  example: SEK
                language:
                  type: string
                  example: sv
                country:
                  type: string
                  example: SE
                orderid:
                  type: string
                  example: 1579169987-277
                returnmethod:
                  type: string
                  example: GET
                accepturl:
                  type: string
                  example: https://www.billmate.se
                cancelurl:
                  type: string
                  example: https://www.billmate.se
                callbackurl:
                  type: string
                  example: https://www.billmate.se
            Articles:
              type: object
              properties:
                artnr:
                  type: string
                  example: A123
                title:
                  type: string
                  example: Article 1 åäö ' / & \\
                quantity:
                  type: string
                  example: 1
                aprice:
                  type: number
                  example: 80
                taxrate:
                  type: string
                  example: 25
                discount:
                  type: string
                  example: 0
                withouttax:
                  type: number
                  example: 80
            Cart:
              type: object
              properties:
                Total:
                  type: object
                  properties:
                    withouttax:
                      type: number
                      example: 80
                    tax:
                      type: number
                      example: 20,
                    withtax:
                      type: number
                      example: 100
                    rounding:
                      type: number
                      example: 0
                Handling:
                  type: object
                  properties:
                    taxrate:
                      type: string
                      example: 25
                    withouttax:
                      type: string
                      example: 0
        pno:
          type: string
          example: Test-Pno
        hash:
          type: string
          example: Test-Hash
        response:
          type: object
          properties:
            credentials:
              type: object
              properties:
                hash:
                  type: string
                  example: cea4c1a400835fa91e8522cd6f93ebec75beb4fdea629541c456dd917012349e950ffd3fa217bc6aa78e66725f71551a80f52edca8cf7d538f6324669ad5e7e2
                logid:
                  type: number
                  example: 771
            data:
              type: object
              properties:
                number:
                  type: string
                  example: 445
                status:
                  type: string
                  example: WaitingForPurchase
                orderid:
                  type: string
                  example: 1579169987-277
                url:
                  type: string
                  example: https://checkout.billmate.se/17882/20200116284cba5d577b15c09c632b6ecd80d6bf
        datetime:
          type: string
          example: Test-Date time
        extralogs:
          type: string
          example: Test-Extra logs
        updatedtime:
          type: string
          example: Test-Updated time
        exception:
          type: number
          example: 3
        test:
          type: number
          example: 4
        useragent:
          type: object
          properties:
            HTTPS:
              type: string
              example: on
            SSL_TLS_SNI:
              type: string
              example: checkout.stage.billmate.se
            HTTP_HOST:
              type: string
              example: checkout.stage.billmate.se
            HTTP_CONNECTION:
              type: string
              example: keep-alive
            CONTENT_LENGTH:
              type: string
              example: 945,
            HTTP_CACHE_CONTROL:
              type: string
              example: max-age=0
            HTTP_ORIGIN:
              type: string
              example: https://checkout.stage.billmate.se
            HTTP_UPGRADE_INSECURE_REQUESTS:
              type: string
              example: 1
            CONTENT_TYPE:
              type: string
              example: application/x-www-form-urlencoded
            HTTP_USER_AGENT:
              type: string
              example: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML,
                like Gecko) Chrome/79.0.3945.88 Safari/537.36
            HTTP_SEC_FETCH_USER:
              type: string
              example: ?1
            HTTP_ACCEPT:
              type: string
              example: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
            HTTP_SEC_FETCH_SITE:
              type: string
              example: same-origin
            HTTP_SEC_FETCH_MODE:
              type: string
              example: navigate
            HTTP_REFERER:
              type: string
              example: https://checkout.stage.billmate.se/test.php
            HTTP_ACCEPT_ENCODING:
              type: string
              example: gzip, deflate, br
            HTTP_ACCEPT_LANGUAGE:
              type: string
              example: en-GB,en;q=0.9,sv-SE;q=0.8,sv;q=0.7,en-US;q=0.6
            HTTP_COOKIE:
              type: string
              example: _ga=GA1.2.1397747754.1571980309;
                _hjid=58f1068a-5e84-47f9-8b46-21ecaf78b46f;
                _fbp=fb.1.1571981954632.1960414650; __zlcmid=uwidZGq8QCHf3Q;
                _gid=GA1.2.1573803628.1578921186;
                PHPSESSID=u0cnde0e7ncb1bp2l73n91n9n6; _gat=1
            PATH:
              type: string
              example: /sbin:/bin:/usr/sbin:/usr/bin:/opt/aws/bin
            SERVER_SIGNATURE:
              type: string
              example: <address>Apache/2.2.34 (Amazon) Server at checkout.stage.billmate.se
                Port 443</address>\n
            SERVER_SOFTWARE:
              type: string
              example: Apache/2.2.34 (Amazon)
            SERVER_NAME:
              type: string
              example: checkout.stage.billmate.se
            SERVER_ADDR:
              type: string
              example: 172.31.23.63
            SERVER_PORT:
              type: string
              example: 443
            REMOTE_ADDR:
              type: string
              example: 83.233.10.154
            DOCUMENT_ROOT:
              type: string
              example: /var/www/checkout
            SERVER_ADMIN:
              type: string
              example: yuksel@billmate
            SCRIPT_FILENAME:
              type: string
              example: /var/www/checkout/test.php
            REMOTE_PORT:
              type: string
              example: 52255
            GATEWAY_INTERFACE:
              type: string
              example: CGI/1.1
            SERVER_PROTOCOL:
              type: string
              example: HTTP/1.1
            REQUEST_METHOD:
              type: string
              example: POST
            QUERY_STRING:
              type: string
              example: ""
            REQUEST_URI:
              type: string
              example: /test.php
            SCRIPT_NAME:
              type: string
              example: /test.php
            PHP_SELF:
              type: string
              example: /test.php
            REQUEST_TIME:
              type: number
              example: 1579169987
        duration_client:
          type: number
          example: 5
        duration_server:
          type: number
          example: 6
        language:
          type: string
          example: Test-Language
        host:
          type: string
          example: Test-Host
    InvoiceServiceSettings:
      type: object
      properties:
        mexcCustomerincoiceservicesettingsid:
          type: number
          example: 1
          readOnly: true
        mm3servicesid:
          type: number
          example: 2
          readOnly: true
        mexcModulesid:
          type: number
          example: 3
        listorder:
          type: string
          example: Test-List order
        filterorder:
          type: string
          example: Test-Filter order
        emails:
          type: string
          example: Test-Emails
        defaultinterest:
          type: string
          example: Test-Default interest
        defaultpaymentterms:
          type: number
          example: 4
        defaultpaymentterms_company:
          type: number
          example: 5
        defaulttax:
          type: string
          example: Test-Defaul tax
        defaulttax_shipping:
          type: string
          example: Test-Default tax shipping
        defaulttax_handling:
          type: string
          example: Test-Default tax handling
        defaulthousework:
          type: number
          example: 6
        nextinvoiceid:
          type: number
          example: 7
        reversetax:
          type: number
          example: 8
        sender:
          type: string
          example: Test-Sender
        senderemail:
          type: string
          example: Test-Sender Email
        msgemail:
          type: string
          example: Test-Msge mail
        msgemail_en:
          type: string
          example: Test-Mesge mail end
        msgemail_no:
          type: string
          example: Test-Msge email no
        msgemail_da:
          type: string
          example: Test-Msge email da
        freetext:
          type: string
          example: Test-Free text
        remindermsgemail:
          type: string
          example: Test-Reminder msge mail
        remindermsgemail_en:
          type: string
          example: Test-Reminder msge mail en
        remindermsgemail_no:
          type: string
          example: Test-Reminder msge mail no
        remindermsgemail_da:
          type: string
          example: Test-Reminder msge mail da
        servicefee:
          type: string
          example: Test-Service fee
        xmlexporttype:
          type: string
          example: Test-Xml export type
        defaultfreight:
          type: string
          example: Test-Default freight
        ocrenabled:
          type: number
          example: 9
        roundingenabled:
          type: number
          example: 10
        defaultreminderfee:
          type: string
          example: Test-Default reminder fee
        defaultreminderfee_company:
          type: string
          example: Test-Default reminder fee company
        defaultdaterange:
          type: string
          example: Test-Default date range
        roundingsetting:
          type: number
          example: 11
        credit:
          type: number
          example: 12
        creditpermonth:
          type: number
          example: 13
        creditagreed:
          type: number
          example: 14
        creditextra:
          type: number
          example: 15
        pdfasattachment:
          type: number
          example: 16
        fortnox2accesstoken:
          type: string
          example: Test-Fortnox to access token
        fortnoxtoken:
          type: string
          example: Test-Fortnox token
        fortnoxdb:
          type: string
          example: Test-Fortnox db
        fortnoxtoken_pricecode:
          type: string
          example: Test-Fortnox token price code
        fortnoxdatetime:
          type: string
          example: Test-Fortnox date time
        SIE4iSetting:
          type: string
          example: Test-SIE4i setting
        SIE4iLastupdate:
          type: string
          example: Test-SIE4i last update
        showeasy:
          type: number
          example: 17
        showdelivery:
          type: number
          example: 18
        showwithtax:
          type: number
          example: 19
        showfakturaservice:
          type: number
          example: 20
        showfakturakop:
          type: number
          example: 21
        showdelbetalning:
          type: number
          example: 22
        showcard:
          type: number
          example: 23
        showbank:
          type: number
          example: 24
        showcash:
          type: number
          example: 25
        showcheckout:
          type: number
          example: 26
        showswish:
          type: number
          example: 27
        emailtemplate:
          type: string
          example: Test-Email template
        remindoverdue:
          type: number
          example: 28
        vatrates:
          type: string
          example: Test-Vat rates
        owntaxrate:
          type: string
          example: Test-Own tax rate
        notifystoreowner:
          type: number
          example: 29
        notifywithsms:
          type: number
          example: 30
        sendautoreminder:
          type: number
          example: 31
        disableemail:
          type: number
          example: 32
        disableemail_service:
          type: number
          example: 33
        disableemailcheckforapi:
          type: number
          example: 34
        enabledifferentaddress:
          type: number
          example: 35
        enableautofetchaddress:
          type: number
          example: 36
        enablecheckoutcardrecurring:
          type: number
          example: 37
        enablerequirephonenumber:
          type: number
          example: 38
        enablepricelistapi:
          type: number
          example: 39
        taxdisabled:
          type: number
          example: 40
        reportcolumns:
          type: string
          example: Test-Repot columns
        billmate_trustly_username:
          type: string
          example: Test-Billmate trustly username
        billmate_trustly_password:
          type: string
          example: Test-Billmate trustly password
        autoreminder:
          type: string
          example: Test-Auto reminder
        force2usebankid:
          type: number
          example: 41
        decimalseparator:
          type: string
          example: Test-Decimal seperator
        thousandseparator:
          type: string
          example: Test-Thousand seperator
        servicefee_title:
          type: string
          example: Test-Service fee title
        yourorder_title:
          type: string
          example: Test-Your order title
        card_info:
          type: string
          example: Test-Card info
        multiplepurchasealarm:
          type: number
          example: 42
        custompaymentmethods:
          type: string
          example: Test-Custom payment methods
        apricewithtax:
          type: number
          example: 43
        swish_number:
          type: string
          example: Test-Swish number
        swish_expirydate:
          type: string
          example: Test-Swish expiry date
        checkout_proceedwithpno:
          type: number
          example: 44
        force18years:
          type: number
          example: 45
        checkout_available_customertypes:
          type: string
          example: Test-Checkout available customer types
        import_method:
          type: string
          example: Test-Import method
        paymentterms90enabled:
          type: number
          example: 46
        paymentterms15enabled:
          type: number
          example: 47
        paymentterms74enabled:
          type: number
          example: 48
        locknameforshipping:
          type: number
          example: 49
        showcard_quickpayment:
          type: number
          example: 50
        paymentterms120enabled:
          type: number
          example: 51
        swedbankpayMerchantId:
          type: string
          example: Test-Swed bank pay merchant id
        swedbankpayMerchantToken:
          type: string
          example: Test-Swed bank pay Merchant token
        agreement_automation:
          type: number
          example: 52
        enableautoactivation:
          type: number
          example: 53
        autoaction_status:
          type: number
          example: 54
        companySigning:
          type: number
          example: 55
        showseamless:
          type: number
          example: 57
        showPf2Fee:
          type: number
          example: 58
        enableparkright:
          type: number
          example: 59
        parkright_endpoint:
          type: string
          example: Test-Park right endpoint
        parkright_username:
          type: string
          example: Test-Park right username
        parkright_password:
          type: string
          example: Test-Park right password
        parkright_accepturl:
          type: string
          example: Test-Park right accept url
        parkright_cancelurl:
          type: string
          example: Test-Park right cancel url
        parkright_callbackurl:
          type: string
          example: Test-Park right callback url
    Merchant:
      type: object
      properties:
        name:
          type: string
          example: Test-Name
        shortname:
          type: string
          example: Test-Short name
        official:
          type: number
          example: 30
        username:
          type: string
          example: Test-Username
        password:
          type: string
          example: Test-password
        street:
          type: string
          example: Test-Street
        postalcode:
          type: string
          example: Test-Postal code
        city:
          type: string
          example: Test-City
        state:
          type: string
          example: Test-State
        country:
          type: string
          example: Test-Country
        switchboard:
          type: string
          example: Test-Switch board
        fax:
          type: string
          example: Test-Fax
        contactname:
          type: string
          example: Test-Contact name
        contactrole:
          type: string
          example: Test-Contact role
        contactdepartment:
          type: string
          example: Test-Contact department
        contactphone:
          type: string
          example: Test-Contact phone
        contactemail:
          type: string
          example: Test-Contact Email
        contactim:
          type: string
          example: Test-Contact im
        website:
          type: string
          example: Test-Website
        log:
          type: string
          example: Test-Log
        comment:
          type: string
          example: Test-Comment
        distributor:
          type: number
          example: 31
        mm3customersid:
          type: number
          example: 1
          readOnly: true
        mm3distributorsid:
          type: number
          example: 2
          readOnly: true
        mm3servicesid_default:
          type: number
          example: 3
          readOnly: true
        whitelabel:
          type: number
          example: 4
        css:
          type: string
          example: Test-Css
        header:
          type: string
          example: Test-Header
        requestagreeterms:
          type: number
          example: 5
        vatnumber:
          type: string
          example: Test-Vat number
        organizationnumber:
          type: string
          example: Test-Organization Number
        bankgiro:
          type: string
          example: Test-Bank Giro
        plusgiro:
          type: string
          example: Test-Plus Giro
        language:
          type: string
          example: Test-Language
        paymentmethod_default:
          type: string
          enum:
            - day
            - monthly
          example: day
        defaultcredits:
          type: number
          example: 6
        currency:
          type: string
          example: Test-Currency
        rebate_default:
          type: number
          example: 7
        invoicingperiod:
          type: number
          example: 8
        invoicingsince:
          type: string
          example: Test-Invoicing since
        perposition:
          type: string
          example: Test-Per position
        persms:
          type: string
          example: Test-Persms
        autoinvoice:
          type: number
          example: 9
        accountemail:
          type: string
          example: Test-Account Email
        listorder_user:
          type: string
          example: Test-List order user
        listorder_vehicle:
          type: string
          example: Test-List order vehicle
        laUsersid:
          type: number
          example: 10
        iban:
          type: string
          example: Test-Iban
        bic:
          type: string
          example: Test-BIC
        orderkey:
          type: string
          example: Test-Order key
        emails_copy_support:
          type: string
          example: Test-Email copy support
        admincomments:
          type: string
          example: Test-Admin comments
        customerid_connected:
          type: string
          example: Test-Customer id connected
        roundingsetting:
          type: number
          example: 11
        decimalsetting:
          type: string
          example: Test-Decimal settings
        ftpserver:
          type: string
          example: Test-Ftp server
        ftpusername:
          type: string
          example: Test-Ftp username
        ftppassword:
          type: string
          example: Test-Ftp password
        iscommercial:
          type: number
          example: 12
        registeredoffice:
          type: string
          example: Test-Registered office
        approvedforfskat:
          type: number
          example: 13
        articledbs:
          type: string
          example: Test-Article dbs
        storename:
          type: string
          example: Test-Store name
        storeurl:
          type: string
          example: Test-Store url
        storeusername:
          type: string
          example: Test-Store user name
        storepassword:
          type: string
          example: Test-Store password
        pluginname:
          type: string
          example: Test-Plugin name
        creditchecktype:
          type: string
          example: Test-Credit check type
        creditcard_fee:
          type: string
          example: Test-Credit card fee
        creditcard_percentage:
          type: string
          example: Test-Credit card percentage
        bank_fee:
          type: string
          example: Test-Bank fee
        bank_percentage:
          type: string
          example: Test-Bank percentage
        factoring_fee:
          type: string
          example: Test-Factoring fee
        factoring_percentage:
          type: string
          example: Test-Factoring percentage
        partpayment_fee:
          type: string
          example: Test-Part payment fee
        partpayment_percentage:
          type: string
          example: Test-Part payment percentage
        service_fee:
          type: string
          example: Test-Service fee
        service_percentage:
          type: string
          example: Test-Service percentage
        swish_fee:
          type: string
          example: Test-Swish fee
        swish_percentage:
          type: string
          example: Test-Swish percentage
        billmate_simple_enabled:
          type: number
          example: 14
        alarm_checkinterval:
          type: string
          example: Test-Alarm check interval
        alarm_checkrange:
          type: string
          example: Test-Alarm check range
        json:
          type: string
          example: Test-Json
        timezone:
          type: string
          example: Test-Time zone
        lastuseragent:
          type: string
          example: Test-Last user agent
        riskzone:
          type: number
          example: 15
        riskzone_other:
          type: number
          example: 16
        notification_neworder_email:
          type: string
          example: Test-Notification new order email
        notification_pending_email:
          type: string
          example: Test-Notification pending email
        notification_avrakning_email:
          type: string
          example: Test-Notification avrakning email
        notification_email:
          type: string
          example: Test-Notification Email
        first_invoicedate:
          type: string
          example: Test-First Invoice Date
        first_testinvoicedate:
          type: string
          example: Test-First test invoice date
        first_apilogdate:
          type: string
          example: Test-First api log date
        total_payout:
          type: number
          example: 17
        agreedterms:
          type: number
          example: 18
        onboarded_complete:
          type: number
          example: 19
        onboarded_initdate:
          type: string
          example: Onboarded init date
        offers_enabled:
          type: number
          example: 20
        orders_enabled:
          type: number
          example: 21
        contract_invoices_enabled:
          type: number
          example: 22
        import_invoices_enabled:
          type: number
          example: 23
        export_invoices_enabled:
          type: number
          example: 24
        logos:
          type: string
          example: Test-Logos
        creditcard_consumer_feeid:
          type: number
          example: 25
        factoring_consumer_feeid:
          type: number
          example: 26
        partpayment_consumer_feeid:
          type: number
          example: 27
        service_consumer_feeid:
          type: number
          example: 28
        swish_consumer_feeid:
          type: number
          example: 29
    PostSettlementResponse:
      type: object
      properties:
        ETag:
          type: string
          example: 230f0015b0475438892862e564b8a8a7
        Location:
          type: string
          example: https://test-billmate.s3.eu-west-1.amazonaws.com/reports/17882/sample.pdf
        key:
          type: string
          example: reports/17882/sample.pdf
        Key:
          type: string
          example: reports/17882/sample.pdf
        Bucket:
          type: string
          example: test-billmate
    AmazonS3Report:
      type: object
      properties:
        AcceptRanges:
          type: string
          example: bytes
        LastModified:
          type: string
          example: 2022-08-25T12:05:52.000Z
        ContentLength:
          type: number
          example: 28846
        ETag:
          type: string
          example: 230f0015b0475438892862e564b8a8a7
        ContentType:
          type: string
          example: application/octet-stream
        Metadata:
          type: object
          example: {}
        Body:
          type: object
          properties:
            type:
              type: string
              example: Buffer
            data:
              type: array
              items:
                type: integer
                example: 10000
    SettlementReportItemExport:
      type: array
      items:
        type: object
        properties:
          invoiceno:
            type: string
            example: "654321"
          orderno:
            type: string
            example: "123456"
          invoicedate:
            type: string
            example: 2023-12-24
          customername:
            type: string
            example: Nisse Hult
          amount:
            type: float
            example: 100
          fee:
            type: float
            example: 2
          type:
            type: string
            enum:
              - Paid
              - Purchase
          paidInCapital:
            type: float
            example: 100
    SettlementReportList:
      type: object
      properties:
        count:
          type: integer
          example: 1
        contents:
          type: array
          items:
            $ref: "#/components/schemas/SettlementReportItem"
    SettlementReportItem:
      type: object
      properties:
        Key:
          type: string
          example: 123-2023-12-23.pdf
        settlementDate:
          type: string
          example: 2023-12-23
        settlementId:
          type: number
          example: 123
        count:
          type: number
          example: 2
        total:
          type: number
          example: 250
        types:
          type: string
          example: Purchase
        LastModified:
          type: string
          example: 2022-08-25T11:57:37.000Z
    SettlementDates:
      type: object
      properties:
        count:
          type: number
          example: 5
        contents:
          type: array
          items:
            type: object
            properties:
              settlementDate:
                type: string
                format: date
              dateCount:
                type: number
                example: 1
                description: The number of dates within the same settlement. This should be 1
                  unless there are some potential error.
          example:
            - settlementDate: 2023-12-02
            - settlementDate: 2023-12-09
            - settlementDate: 2023-12-16
            - settlementDate: 2023-12-23
            - settlementDate: 2023-12-30
    Report:
      type: object
      properties:
        mexcCustomerjournalsid:
          type: number
          example: 146647
        type:
          type: string
          example: Month
        journalid:
          type: number
          example: 1
        mexcModulesid:
          type: number
          example: 46862
        mm3servicesid:
          type: number
          example: 16596
        mexcCustomerinvoicesids:
          type: string
          example: 2130361,2130487,2130496
        json:
          type: string
          example: '{"SEK":{"taxes":{"0":0,"25":11.4},"totals":{"0":6,"25":45.6},"totalnet":51.6,"totaltax":11.4,"totalreduction":0,"total":63,"topay":63,"rounding":0,"invoiceid_real":"","invoicedate":"SUMMA"}}'
        filename:
          type: string
          example: 135895340050fffbb1de7b0.pdf
        createddate:
          type: string
          example: 2018-05-30T22:00:00.000Z
        timestamp:
          type: string
          example: 2018-05-30T22:00:00.000Z
    User:
      type: object
      properties:
        name:
          type: string
          example: Test-Name
        phonenumber:
          type: string
          example: Test-Phone integer
        email:
          type: string
          example: Test-Email
        username:
          type: string
          example: Test-Username
        password_old:
          type: string
          example: Test-Password old
        password_hashed:
          type: string
          example: Test-Password hashed
          readOnly: true
        company:
          type: string
          example: Test-Company
        street:
          type: string
          example: Test-Street
        postalcode:
          type: string
          example: Test-Postal code
        city:
          type: string
          example: Test-City
        country:
          type: string
          example: Test-Country
        mm3userrolesid:
          type: integer
          example: 0
        department:
          type: string
          example: Test-Department
        confirmationcode:
          type: string
          example: Test-Confirmation code
        smscode:
          type: string
          example: Test-Sms code
        createtime:
          type: string
          example: Test-Create time
        logintime:
          type: string
          example: Test-Login time
        activated:
          type: integer
          example: 0
        mm3customersid:
          type: integer
          example: 1000
          readOnly: true
        access_admin:
          type: integer
          example: 0
        mm3useraccountsid:
          type: integer
          example: 1000
          readOnly: true
        access_superadmin:
          type: integer
          example: 0
        access_distributor:
          type: integer
          example: 0
        access_external:
          type: integer
          example: 0
        mexcRolesid:
          type: integer
          example: 2
        access_level:
          type: integer
          example: 0
        mm3usersid:
          type: integer
          example: 1000
        agreedterms:
          type: integer
          example: 0
        mexcVehiclesid:
          type: integer
          example: 0
        phonenumber2:
          type: string
          example: Test-Phone integer 2
        lastlogin:
          type: string
          example: Test-Last login
        lastactivity:
          type: string
          example: Test-Last activity
        pushTokens:
          type: string
          example: Test-Push Tokens
        pushBadge:
          type: integer
          example: 0
        ownerPno:
          type: string
          example: Test-Owner pno
    Whitelists:
      type: object
      properties:
        mexcCreditwhitelistsid:
          type: number
          example: 5
          readOnly: true
        number:
          type: number
          example: 5560631086
        until:
          type: string
          example: 2017-01-05T23:00:00.000Z
        datetime:
          type: string
          example: 2016-12-06T06:54:05.000Z
        registeredby:
          type: string
          example: Andreas Johansson
        reason:
          type: string
          example: ""
        mm3customersid:
          type: number
          example: 13503
        disableAddressCheck:
          type: number
          example: 0
parameters:
  articlefilter:
    in: query
    name: filter
    required: false
    description: >
      List of filters to use. Multiple filters can be used in a comma
      separated list.


      **rangeByDate** filter articles by date. Requires the *to* and *from* parameters


      **searchArticleNumber** filter articles by article number. Requires the *articlenr* parameter


      **searchArticleName** filter articles by article name. Requires the *articlename* parameter 


      **searchArticle** This filter will search both in the article number and the article name. Requires the *searchArticle* parameter.


      **articlesByCurrency** filter articles by currency. Requires the *currency* parameter. This filter will include articles that have a null value for currency.


      **articlesByCurrencyStrict** filter articles by currency. Requires the *currency* parameter. This filter will strictly filter articles with the given currency excluding null values.


      **articlesByTaxrate** filter articles by tax rate. Requires the *taxrate* parameter 


      **articlesWithNoTaxrate** filter articles with no tax rate. (In this case 0 is a valid taxrate)
    schema:
      type: array
      items:
        type: string
        enum:
          - rangeByDate
          - searchArticleNumber
          - searchArticleName
          - searchArticle
          - articlesByCurrency
          - articlesByCurrencyStrict
          - articlesByTaxrate
          - articlesWithNoTaxrate
    collectionFormat: multi
  articlefrom:
    in: query
    name: from
    schema:
      type: date
    description: |
      The *from* parameter is required by the filter values **rangeByDate**
  articleto:
    in: query
    name: to
    schema:
      type: date
    description: |
      The *to* parameter is required by the filter values **rangeByDate**
  articlesearchnumber:
    in: query
    name: articlenr
    schema:
      type: string
    description: >
      The search parameter is required by the filter value
      **searchArticleNumber**. 


      Example 1 https://www.example.com?filter=searchArticleNumber&articlenr=Test
  articlesearchname:
    in: query
    name: articlename
    schema:
      type: string
    description: >
      The search parameter is required by the filter value
      **searchArticleName**. 


      Example 1 https://www.example.com?filter=searchArticleName&articlename=Test
  articlesearcharticle:
    in: query
    name: searchArticle
    schema:
      type: string
    description: |
      The search parameter is required by the filter value **searchArticle**. 

      Example 1 https://www.example.com?filter=searchArticle&searchArticle=Test
  articlesbycurrency:
    in: query
    name: currency
    schema:
      type: string
    description: >
      The search parameter is required by the filter values
      **articlesByCurrency** and **articlesByCurrencyStrict**. 


      Example 1 https://www.example.com?filter=articlesByCurrency&currency=NOK


      Example 2 https://www.example.com?filter=articlesByCurrencyStrict&currency=NOK
  articlesbytaxrate:
    in: query
    name: taxrate
    schema:
      type: string
    description: >
      The search parameter is required by the filter value
      **articlesByTaxrate**. 


      Example 1 https://www.example.com?filter=articlesByTaxrate&taxrate=12
  customerlimit:
    in: query
    name: limit
    schema:
      default: 100
      type: integer
      example: 100
  customerstart:
    in: query
    name: start
    schema:
      default: 0
      type: integer
      example: 0
  customerfilter:
    in: query
    name: filter
    required: false
    description: >
      List of filters to use. Multiple filters can be used in a comma
      separated list.


      **rangeByDate** requires the *to* and *from* parameters


      **search** requires the *search* parameter and this filter searches customers in the customer list by 

      the customer name, id, address, postcode, postoffice and companyno


      **searchInInvoiceForm** requires the *searchInInvoiceForm* parameter and this filter searches customer in invoice form by the 

      customer name, id and pnr/org number


      **isCustomerType** requires the *isPrivate* or *isCompany* parameters.


      **isTitle** requires the *isEFaktura* or *isReverseTax* parameters.
    schema:
      type: array
      items:
        type: string
        enum:
          - rangeByDate
          - search
          - searchInInvoiceForm
          - isCustomerType
          - isTitle
    collectionFormat: multi
  customerfrom:
    in: query
    name: from
    schema:
      type: date
    description: |
      The *from* parameter is required by the filter values **rangeByDate**
  customerto:
    in: query
    name: to
    schema:
      type: date
    description: |
      The *to* parameter is required by the filter values **rangeByDate**
  customersearch:
    in: query
    name: search
    schema:
      type: string
    description: >
      The search parameter is required by the filter value **search**. It
      may occur multiple time to create a better search.


      i.e. if you need to search for *Nisse Hult* but want to make the search for *Nisse* and *Hult* you can send them as separate *search* parameters.


      Example 1 https://www.example.com?filter=search&search=Nisse%20Hult  This will search for records that matches the string "Nisse Hult".


      Example 2 https://www.example.com?filter=search&search=Nisse&search=Hult  This will search for records that matches both "Nisse" and "Hult".
  customersearchinvoiceform:
    in: query
    name: searchInInvoiceForm
    schema:
      type: string
    description: >
      The searchInInvoiceForm parameter is required by the filter value
      **searchInInvoiceForm**. It may occur multiple time to create a better
      search.


      i.e. if you need to search for *Nisse Hult* but want to make the search for *Nisse* and *Hult* you can send them as separate *search* parameters.


      Example 1 https://www.example.com?filter=search&search=Nisse%20Hult  This will search for records that matches the string "Nisse Hult".


      Example 2 https://www.example.com?filter=search&search=Nisse&search=Hult  This will search for records that matches both "Nisse" and "Hult".
  isPrivate:
    in: query
    name: isPrivate
    schema:
      type: number
      minimum: 1
      maximum: 1
    description: >
      If isPrivate parameter is set as isPrivate=1, the filter returns
      the customers whose types are Private.
  isCompany:
    in: query
    name: isCompany
    schema:
      type: number
      minimum: 1
      maximum: 1
    description: >
      If isCompany parameter is set as isCompany=1, the filter returns
      the customers whose types are Company.
  isEFaktura:
    in: query
    name: isEFaktura
    schema:
      type: number
      minimum: 1
      maximum: 1
    description: >
      If isEFaktura parameter is set as isEFaktura=1, the filter returns
      the customers that can have E-Faktura.
  isReverseTax:
    in: query
    name: isReverseTax
    schema:
      type: number
      minimum: 1
      maximum: 1
    description: >
      If isReverseTax parameter is set as isReverseTax=1, the filter
      returns the customers that can reverse tax.
  invoicelimit:
    in: query
    name: limit
    schema:
      default: 100
      type: integer
      example: 2
  invoicestart:
    in: query
    name: start
    schema:
      default: 0
      type: integer
      example: 0
  invoicefilter:
    in: query
    name: filter
    type: array
    schema:
      type: array
      items:
        type: string
        enum:
          - rangeByDate
          - rangeByDeliveryDate
          - rangeByDueDate
          - rangeByInvoiceDate
          - rangeByDatePaid
          - rangeByDateSent
          - search
          - isPayment
          - creditCheck
          - customerNo
          - invoiceType
          - paymentterms
          - isHandling
          - isFactoring
          - isConverted
          - status
          - distributor_status
          - statusCreated
          - statusActivated
          - statusNotCreated
          - country
          - flags
          - flagsOR
          - hasCredit
          - isTypeInvoice
          - isTypePaylink
          - paylinkPaid
          - paylinkUnpaid
    collectionFormat: multi
    required: false
    description: >
      List of filters to use. Multiple filters can be used in a comma
      separated list.


      **rangeByDate** This filter requires *to* and *from* parameters for filtering invoices on dates


      **rangeByDeliveryDate** This filter requires *deliverydateto* and *deliverydatefrom* parameters for filtering invoices on delivery dates


      **rangeByDueDate** This filter requires *duedateto* and *duedatefrom* parameters for filtering invoices on due dates


      **rangeByInvoiceDate** This filter requires *invoicedateto* and *invoicedatefrom* parameters for filtering invoices on invoice dates


      **rangeByDatePaid** This filter requires *paiddateto* and *paiddatefrom* parameters for filtering invoices on paid dates


      **rangeByDateSent** This filter requires *sentdateto* and *sentdatefrom* parameters for filtering invoices on send dates


      **search** This filter requires the *search* parameter. It currently created a phrase search on the following fields

      - customer name

      - customer number

      - street address

      - postal code

      - city

      - your reference

      - our reference

      - project name

      - organisational/personal number

      - street address 2

      - email

      - phone number

      - ocr number.


      **isPayment** This filter can use any of the following query parameters to activate a combination sub-filters on payments

      - isCard if set to 1 then invoices with card payments will be included

      - isSwish if set to 1 then invoices with Swish payments will be included

      - isBank if set to 1 then invoices with bank payments will be included

      - isCash if set to 1 then invoices with cash payments will be included

      - isPartPayment if set to 1 then invoices with partial payments will be included

      - is14Days if set to 1 then invoices with payment terms of 14 days will be included

      - is30Days if set to 1 then invoices with payment terms of 30 days will be included


      **creditCheck** This filter checks the the status of the credit checks by using a combination of the following sub-filters

      - creditCheckApproved if set to 1 then invoices with an approved credit check will be included

      - creditCheckPending if set to 1 then invoices with a pending credit check will be included

      - creditCheckRejected if set to 1 then invoices with a rejected credit check will be included

      - creditCheckDenied if set to 1 then invoices with a denied credit check will be included

      - creditCheckManual if set to 1 then invoices with a manual credit check will be included

      - creditCheckFactoringWithoutRegress if set to 1 then invoices with a status factoring without regress credit check will be included

      - creditCheckFactoringWithRegress if set to 1 then invoices with a status factoring with regress check will be included

      - creditCheckEmpty if set to 1 then invoices with an empty value will be included

      - creditCheckNull if set to 1 then invoices with a null value will be included


      **customerNo** Filter for customer number

      - customerNo The customer number to use with this filter


      **invoiceType** Filter for invoice types

      - invoiceType Types of invoices to filter. The valid values are as follows
        - F Invoice
        - K Credit invoice
        - KN Cash invoice
        - RN Interest invoice

      **paymentTerms** This filter filters invoices based on paymentterms.

      - paymentterm if set this is the number of days for the invoice. Normally you should use the filters is14Days or is30Days


      **isHandling** Service

      - isHandling if set to 1 this filter will filter invoices with service.


      **isFactoring** Factoring

      - isFactoring if set to 1 this filter will filter invoices with factoring.


      **isConverted**

      - isConverted if set to 1 this filter will filter invoices with both service and factoring


      **status** Filter for status

      - status The status of the invoice. The following values are valid values
        - Created
        - Approved
        - Sent
        - Paid
        - Cancelled
        - Factoring
        - Handling
        - E-brev
        - E-brevsent
        - Partpayment

      **distributor_status** Filter for distributor status
        - distributor_status The distributor status of the invoice. The following values are valid values
          - Ready
          - CreditDecision
          - UnderControl
          - FinalDecision
          - Created
          - Approved
          - Sent
          - Paid
          - Cancelled
          - eFakturaSent
          - eFakturaConfirmed
          - eFakturaFailed

      **statusCreated** Filter for created invoices


      This filter does not require any other parameters


      **statusActivated** Filter for invoices that does not have any of the statuses Created or Cancelled


      This filter does not require any other parameters


      **statusNotCreated** Filter for invoices that does not have the status Created


      This filter does not require any other parameters


      **country** Filter for invoice country
        - country The ISO-3166 alpha-2 (two character) country code

      **hasCredit** Filter for invoices that has a credit note


      This filter does not require any other parameters


      **flags** Filter for invoice flags. This filter can be used to filter on any of the 64 bits.
        If multiple flags are used then the filter will require all of them to be set. (Using an AND pattern)
        - flag Decimal value of the flag to filter on. The following values are valid values
          - 1 Invoice is SEND
          - 2 Invoice is PAPER
          - 4 Invoice is MAIL2CUSTOMER
          - 8 Invoice is EBREV
          - 16 Invoice is FACTORING
          - 32 Invoice is HANDLING
          - 64 Invoice is SENTBYDISTRIBUTOR
          - 128 Invoice is CARD
          - 256 Invoice is BANK
          - 512 Invoice is CREDITCREATED
          - 1024 Invoice is PARTPAYMENT
          - 2048 Invoice is CASH
          - 4096 Invoice is CHECKOUT
          - 8192 Invoice is SIMPLE
          - 16384 Invoice is RECURRING_SOURCE
          - 32768 Invoice is RECURRING_DEBITS
          - 65536 Invoice is AUTOCREDIT
          - 131072 Invoice is EXPORTED2DISTRIBUTOR
          - 262144 Invoice is EFAKTURAISAVAILABLE
          - 524288 Invoice is CHATUNREAD
          - 1048576 Invoice is QUEUED2SEND
          - 2097152 Invoice is SENT2INKASSO
          - 4194304 Invoice is FAILED2SEND
          - 8388608 Invoice is SENT2STRALFORS
          - 16777216 Invoice is SENT2TIETO
          - 33554432 Invoice is SWISH
          - 67108864 Invoice is AVRAKNAT
          - 134217728 Invoice is REGRESS
          - 268435456 Invoice is MONTHLYREPORTED
          - 536870912 Invoice is MULPURINFORMED
          - 1073741824 Invoice is QUEUED2CREATEPDF
          - 2147483648 Invoice is CREDITCHECKPENDING
          - 4294967296 Invoice is BILLMATEAGREMENT
          - 8589934592 Invoice is BILLMATEFEE
          - 17179869184 Invoice is QUEUED2AUTOCANCEL
          - 34359738368 Invoice is BILLMATEFEECREDITTOBECHECKED
          - 68719476736 Invoice is ISINDISTRIBUTORSLIST
          - 137438953472 Invoice is QUEUEDPENDING2SEND
          - 274877906944 Invoice is REVIEW
          - 549755813888 Invoice is STATUS_DUE
          - 1099511627776 Invoice is STATUS_COLLECTION
          - 2199023255552 Invoice is ISBOUGHT
          - 4398046511104 Invoice is ISREGRESSABLE
          - 8796093022208 Invoice is CREDIFLOW_EFAKTURA
          - 17592186044416 Invoice is CREDIFLOW_EFAKTURA_QUEUED
          - 35184372088832 Invoice is CREDIFLOW_EFAKTURA_SENT
          - 70368744177664 Invoice is INTEGRATION_ISEXPORTED
          - 140737488355328 Invoice is CONFIRMED_BY_ACTIVATION
          - 281474976710656 Invoice is PAYMENT_EXPORTED
          - 562949953421312 Invoice is PAUSED
          - 1125899906842624 Invoice is PAYMENTFLOW2

      **flagsOR** Filter for invoice flags. This filter can be used to filter on any of the 64 bits.
        If multiple flags are used then the filter will require at least one of them to be set. (Using an OR pattern)
        - flag Decimal value of the flag to filter on. For the values please se **flags** above

      **isTypeInvoice** Filter for invoices that are of type invoice
        isTypeInvoice has no parameters. By adding ! to the filter name it will filter for invoices that are not of type invoice.

      **isTypePaylink** Filter for invoices that are of type paylink
        isTypePaylink has no parameters. By adding ! to the filter name it will filter for invoices that are not of type paylink.

      **paylinkPaid** Filter for paylinks that are paid
        paylinkPaid has no parameters. By adding ! to the filter name it will filter for paylinks that are not paid.

      **paylinkUnpaid** Filter for paylinks that are unpaid
        paylinkUnpaid has no parameters. By adding ! to the filter name it will filter for paylinks that are paid.
  invoicefilterrangebydate:
    in: query
    name: filter
    type: array
    schema:
      type: array
      items:
        type: string
        enum:
          - rangeByDate
    required: false
    description: >
      List of filters to use. Multiple filters can be used in a comma
      separated list.


      **rangeByDate** This filter requires *to* and *from* parameters for filtering invoices on dates
  invoicefrom:
    in: query
    name: from
    schema:
      type: date
      example: 2022-08-15
    description: |
      The *from* parameter is required by the filter values **rangeByDate**
  invoiceto:
    in: query
    name: to
    schema:
      type: date
      example: 2022-08-15
    description: |
      The *to* parameter is required by the filter values **rangeByDate**
  invoicedeliverydatefrom:
    in: query
    name: deliverydatefrom
    schema:
      type: date
      example: 2022-08-15
    description: >
      The *deliverydatefrom* parameter is required by the filter values
      **rangeByDeliveryDate**
  invoicedeliverydateto:
    in: query
    name: deliverydateto
    schema:
      type: date
      example: 2022-08-15
    description: >
      The *deliverydateto* parameter is required by the filter values
      **rangeByDeliveryDate**
  invoiceduedatefrom:
    in: query
    name: duedatefrom
    schema:
      type: date
      example: 2022-08-15
    description: >
      The *duedatefrom* parameter is required by the filter values
      **rangeByDueDate**
  invoiceduedateto:
    in: query
    name: duedateto
    schema:
      type: date
      example: 2022-08-15
    description: >
      The *duedateto* parameter is required by the filter values
      **rangeByDueDate**
  invoiceinvoicedatefrom:
    in: query
    name: invoicedatefrom
    schema:
      type: date
      example: 2022-08-15
    description: >
      The *invoicedatefrom* parameter is required by the filter values
      **rangeByInvoiceDate**
  invoiceinvoicedateto:
    in: query
    name: invoicedateto
    schema:
      type: date
      example: 2022-08-15
    description: >
      The *invoicedateto* parameter is required by the filter values
      **rangeByInvoiceDate**
  invoicedatepaidfrom:
    in: query
    name: datepaidfrom
    schema:
      type: date
      example: 2022-08-15
    description: >
      The *datepaidfrom* parameter is required by the filter values
      **rangeByDatePaid**
  invoicedatepaidto:
    in: query
    name: datepaidto
    schema:
      type: date
      example: 2022-08-15
    description: >
      The *datepaidto* parameter is required by the filter values
      **rangeByDatePaid**
  invoicedatesentfrom:
    in: query
    name: datesentfrom
    schema:
      type: date
      example: 2022-08-15
    description: >
      The *datesentfrom* parameter is required by the filter values
      **rangeByDateSent**
  invoicedatesentto:
    in: query
    name: datesentto
    schema:
      type: date
      example: 2022-08-15
    description: >
      The *datesentto* parameter is required by the filter values
      **rangeByDateSent**
  invoicesearch:
    in: query
    name: search
    schema:
      type: string
      example: Nisse Hult
    description: >
      The search parameter is required by the filter value **search**. It
      may occur multiple time to create a better search.


      The filter will automatically split strings that contains a space making them equal to as if they were sent as separate *search* parameters.


      Example 1 https://www.example.com?filter=search&search=Nisse&search=Hult  This will search for records that matches both "Nisse" and "Hult".


      Example 2 https://www.example.com?filter=search&search=Nisse%20Hult  This is equal to example 1 since the string "Nisse Hult" will be split in to "Nisse" and "Hult".
  invoiceiscard:
    in: query
    name: isCard
    schema:
      type: number
      example: 1
      default: 0
    description: >
      When using the filter **isPayment**. If set to 1 then invoices with
      card payments will be included
  invoiceisswish:
    in: query
    name: isSwish
    schema:
      type: number
      example: 1
      default: 0
    description: >
      When using the filter **isPayment**. If set to 1 then invoices with
      Swish payments will be included
  invoiceisbank:
    in: query
    name: isBank
    schema:
      type: number
      example: 1
      default: 0
    description: >
      When using the filter **isPayment**. If set to 1 then invoices with
      bank payments will be included
  invoiceiscash:
    in: query
    name: isCash
    schema:
      type: number
      example: 1
      default: 0
    description: >
      When using the filter **isPayment**. If set to 1 then invoices with
      cash payments will be included
  invoiceispartpayment:
    in: query
    name: isPartPayment
    schema:
      type: number
      example: 1
      default: 0
    description: >
      When using the filter **isPayment**. If set to 1 then invoices with
      partial payments will be included
  invoiceis14days:
    in: query
    name: is14Days
    schema:
      type: number
      example: 1
      default: 0
    description: >
      When using the filter **isPayment**. If set to 1 then invoices with
      payment terms of 14 days will be included
  invoiceis30days:
    in: query
    name: is30Days
    schema:
      type: number
      example: 1
      default: 0
    description: >
      When using the filter **isPayment**. If set to 1 then invoices with
      payment terms of 30 days will be included
  invoiceisfactoring:
    in: query
    name: isFactoring
    schema:
      type: number
      example: 1
      default: 0
    description: |
      If set to 1 then invoices set to be handled by factoring will be included
  invoiceishandling:
    in: query
    name: isHandling
    schema:
      type: number
      example: 1
      default: 0
    description: >
      If set to 1 then invoices set to be handled by service (handling)
      will be included
  invoiceisconverted:
    in: query
    name: isConverted
    schema:
      type: number
      example: 1
      default: 0
    description: >
      If set to 1 then invoices set to be handled by service (handling)
      and factoring will be included
  invoicecountry:
    in: query
    name: country
    schema:
      type: string
      example: sv
      default: null
    description: >
      If set to a ISO-3166 country code invoices with that country will
      be filtered out 
  invoicecustomerno:
    in: query
    name: customerNo
    schema:
      type: string
      example: sv
      default: null
    description: >
      If set to a customer number invoices with that customer number will
      be filtered out
  invoiceinvoicetype:
    in: query
    name: invoiceType
    schema:
      type: array
      items:
        type: string
        enum:
          - F
          - K
          - KN
          - RF
      example: F
      default: null
    description: >
      If set to a invoice type invoices with that invoice type will be
      filtered out.

      - F = Invoice

      - K = Credit note

      - KN = Cash note

      - RF = Interest invoice
  invoicehascredit:
    in: query
    name: hasCredit
    schema:
      type: boolean
      example: false
      default: null
    description: |
      Returns true if an invoice has a credit note created for it
  invoicedatefield:
    name: dateField
    in: query
    description: The date field to use for grouping
    required: true
    schema:
      type: string
    example: date
    default: date
  invoicexoverridetest:
    in: header
    name: X-overrideTest
    description: >
      If this header value is set to "true" the internal checking for
      test mode is skipped.


      Please note that this only have effect on test systems.
    schema:
      type: string
      example: "true"
  merchantlimit:
    in: query
    name: limit
    schema:
      default: 100
      type: integer
      example: 100
  merchantstart:
    in: query
    name: start
    schema:
      default: 0
      type: integer
      example: 0
  merchantapicallbacksfilter:
    in: query
    name: filter
    required: false
    description: >
      List of filters to use. Multiple filters can be used in a comma
      separated list.


      **rangeByDate** requires the *to* and *from* parameters


      **search** requires the *search* parameter and this filter searches api logs of the merchant by 

      url and apiCallbacksid
    schema:
      type: array
      items:
        type: string
        enum:
          - rangeByDate
          - search
    collectionFormat: multi
  merchantapilogsfilter:
    in: query
    name: filter
    required: false
    description: >
      List of filters to use. Multiple filters can be used in a comma
      separated list.


      **rangeByDate** requires the *to* and *from* parameters


      **search** requires the *search* parameter and this filter searches api logs of the merchant by 

      the function name, apiLogsid
    schema:
      type: array
      items:
        type: string
        enum:
          - rangeByDate
          - search
    collectionFormat: multi
  merchantfrom:
    in: query
    name: from
    schema:
      type: date
    description: |
      The *from* parameter is required by the filter values **rangeByDate**
  merchantto:
    in: query
    name: to
    schema:
      type: date
    description: |
      The *to* parameter is required by the filter values **rangeByDate**
  merchantsearch:
    in: query
    name: search
    schema:
      type: string
    description: |
      The search parameter is required by the filter value **search**.
  reportlimit:
    in: query
    name: limit
    schema:
      default: 100
      type: integer
      example: 100
  reportstart:
    in: query
    name: start
    schema:
      default: 0
      type: integer
      example: 0
  reportfilter:
    in: query
    name: filter
    required: false
    description: >
      List of filters to use. 


      **rangeByDate** requires the *to* and *from* parameters by created date


      **search** requires the *search* parameter and this filter searches reports by 

      mexcCustomerjournalsid and filename
    schema:
      type: array
      items:
        type: string
        enum:
          - rangeByDate
          - search
    collectionFormat: multi
  reportsearch:
    in: query
    name: search
    schema:
      type: string
    description: >
      The search parameter is required by the filter value **search**. It
      may occur multiple time to create a better search.
  reportfrom:
    in: query
    name: from
    schema:
      type: date
    description: |
      The *from* parameter is required by the filter values **rangeByDate**
  reportto:
    in: query
    name: to
    schema:
      type: date
    description: |
      The *to* parameter is required by the filter values **rangeByDate**
  reportstatisticsfilter:
    in: query
    name: filter
    required: false
    description: >
      List of filters to use. 


      **rangeByDate** requires the *to* and *from* parameters by date for /reports/statistics
    schema:
      type: array
      items:
        type: string
        enum:
          - rangeByDate
  reportstatisticsfrom:
    in: query
    name: from
    schema:
      type: date
    description: >
      The *from* parameter is required by the filter values
      **rangeByDate** for /reports/statistics
  reportstatisticsto:
    in: query
    name: to
    schema:
      type: date
    description: >
      The *to* parameter is required by the filter values **rangeByDate**
      for /reports/statistics

